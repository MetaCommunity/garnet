#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "GARNET-GADGETS")))
(PROGN
 (EXPORT
  '(DISPLAY-ERROR DISPLAY-ERROR-AND-WAIT DISPLAY-QUERY DISPLAY-QUERY-AND-WAIT
    CAREFUL-EVAL CAREFUL-STRING-EVAL CAREFUL-READ-FROM-STRING
    CAREFUL-EVAL-FORMULA-LAMBDA)))
(PROGN
 (SYSTEM::C-DEFUN 'INTERNAL-DISPLAY-Q-OR-E
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET STRING WAIT LABELS))))
(PROGN
 (SYSTEM::C-DEFUN 'DISPLAY-ERROR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(ERROR-GADGET &OPTIONAL (STRING (G-VALUE ERROR-GADGET :STRING))))))
(PROGN
 (SYSTEM::C-DEFUN 'DISPLAY-ERROR-AND-WAIT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(ERROR-GADGET &OPTIONAL (STRING (G-VALUE ERROR-GADGET :STRING))))))
(PROGN
 (SYSTEM::C-DEFUN 'DISPLAY-QUERY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(QUERY-GADGET &OPTIONAL (STRING (G-VALUE QUERY-GADGET :STRING))
     LABEL-LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'DISPLAY-QUERY-AND-WAIT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(QUERY-GADGET &OPTIONAL (STRING (G-VALUE QUERY-GADGET :STRING))
     LABEL-LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'E-Q-GADGET-SEL-FUNC
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'ERROR-GADGET-DESTROY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ERROR-GADGET &OPTIONAL ERASE))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CAREFUL-EVAL)
 (SYSTEM::%PUTD 'CAREFUL-EVAL
  (SYSTEM::MAKE-MACRO
   (FUNCTION CAREFUL-EVAL
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (NOT (<= 2. (LENGTH SYSTEM::<MACRO-FORM>) 4.))
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((FORM (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (AN-ERROR-GADGET (CADDR . #1#)) (ERROR-MESSAGE (CADDDR . #1#)))
       (BLOCK CAREFUL-EVAL
        `(LET
          ((CUSTOM:*ERROR-HANDLER*
            #'(LAMBDA (CONTINUE ERRORSTRING &REST ARGS)
               (IF CONTINUE
                (LET ((CUSTOM:*ERROR-HANDLER* NIL))
                 (APPLY #'CERROR CONTINUE ERRORSTRING ARGS))
                (LET ((CONDITION ERRORSTRING))
                 (WHEN ,AN-ERROR-GADGET
                  (LET
                   ((STR
                     (IF ,ERROR-MESSAGE
                      (FORMAT NIL #2="~A~%~%~A" CONDITION ,ERROR-MESSAGE)
                      (FORMAT NIL #3="~A" CONDITION))))
                   (DISPLAY-ERROR ,AN-ERROR-GADGET STR)))
                 (VALUES NIL CONDITION))))))
          (EVAL ,FORM))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'CAREFUL-STRING-EVAL
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(STRING &OPTIONAL AN-ERROR-GADGET ERROR-MESSAGE))))
(PROGN
 (SYSTEM::C-DEFUN 'CAREFUL-READ-FROM-STRING
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(STRING &OPTIONAL AN-ERROR-GADGET ERROR-MESSAGE))))
(PROGN
 (SYSTEM::C-DEFUN 'CAREFUL-EVAL-FORMULA-LAMBDA
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(EXPR AN-ERROR-GADGET ERROR-MESSAGE THE-OBJ THE-SLOT THE-FORMULA WARN-P))))