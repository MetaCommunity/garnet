#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "LAPIDARY")))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL CHOICE-MENU *BY-DEMO-COPY*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *CHOICE-INTER-QUEUE*)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-START-WHERE)
 (SYSTEM::%PUTD 'CHOICE-START-WHERE
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-START-WHERE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK CHOICE-START-WHERE `(G-VALUE CHOICE-MENU :START-WHERE)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-FEEDBACK-OBJ)
 (SYSTEM::%PUTD 'CHOICE-FEEDBACK-OBJ
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-FEEDBACK-OBJ
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK CHOICE-FEEDBACK-OBJ `(G-VALUE CHOICE-MENU :FEEDBACK-OBJ)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-FINAL-FEEDBACK)
 (SYSTEM::%PUTD 'CHOICE-FINAL-FEEDBACK
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-FINAL-FEEDBACK
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK CHOICE-FINAL-FEEDBACK
        `(G-VALUE CHOICE-MENU :FINAL-FEEDBACK-OBJ)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-HOW-SET)
 (SYSTEM::%PUTD 'CHOICE-HOW-SET
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-HOW-SET
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL (BLOCK CHOICE-HOW-SET `(G-VALUE CHOICE-MENU :HOW-SET)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-OTHER-BOX)
 (SYSTEM::%PUTD 'CHOICE-OTHER-BOX
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-OTHER-BOX
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK CHOICE-OTHER-BOX
        `(G-VALUE CHOICE-MENU :START-WHERE :CONTENTS :OTHER-BOX)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'CHOICE-OTHER-BUTTON)
 (SYSTEM::%PUTD 'CHOICE-OTHER-BUTTON
  (SYSTEM::MAKE-MACRO
   (FUNCTION CHOICE-OTHER-BUTTON
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK CHOICE-OTHER-BUTTON
        `(G-VALUE CHOICE-MENU :START-WHERE :CONTENTS :OTHER-BUTTON)))))))))
(PROGN
 (SYSTEM::C-DEFUN 'INTERACTOR-NAME-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET INTERACTOR-NAME))))
(PROGN
 (SYSTEM::C-DEFUN 'AGG-OF-ITEMS-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG-BOX LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'SINGLE-ITEM-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ITEM-BOX LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'FEEDBACK-OBJ-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FEEDBACK-OBJ-BOX BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'BY-DEMO-INTERIM-FEEDBACK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'NIL-FEEDBACK-OBJ-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'FINAL-FEEDBACK-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FINAL-FEEDBACK-BOX BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'BY-DEMO-FINAL-FEEDBACK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'NIL-FINAL-FEEDBACK-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'INTER-TYPE-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON-PANEL VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'FINAL-FUNCTION-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LABELED-BOX STRING))))
(PROGN
 (SYSTEM::C-DEFUN 'HOW-SET-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON-PANEL VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'INCREMENT-BY-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MAX-VALUE-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'CHOICE-INTER-DO-GO (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'CHOICE-INTER-DO-STOP
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))