#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "LAPIDARY")))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL MOVE-GROW-INTER-WIN)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL MOVE-GROW-INTER-AGG)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MOVE-GROW-INTER-QUEUE*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MOVE-GROW-BOX-WIN*)))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-INTER-DO-STOP
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-START-WHERE)
 (SYSTEM::%PUTD 'MOVE-GROW-START-WHERE
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-START-WHERE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-START-WHERE
        `(G-VALUE MOVE-GROW-INTER-MENU :START-WHERE)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-OBJ-PROTOTYPES)
 (SYSTEM::%PUTD 'MOVE-GROW-OBJ-PROTOTYPES
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-OBJ-PROTOTYPES
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-OBJ-PROTOTYPES
        `(G-VALUE MOVE-GROW-INTER-MENU :PROTOTYPE-OBJS :OBJ-PROTOTYPES)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-FEEDBACK-PROTOTYPES)
 (SYSTEM::%PUTD 'MOVE-GROW-FEEDBACK-PROTOTYPES
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-FEEDBACK-PROTOTYPES
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-FEEDBACK-PROTOTYPES
        `(G-VALUE MOVE-GROW-INTER-MENU :PROTOTYPE-OBJS
          :FEEDBACK-PROTOTYPES)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-FEEDBACK-OBJ)
 (SYSTEM::%PUTD 'MOVE-GROW-FEEDBACK-OBJ
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-FEEDBACK-OBJ
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-FEEDBACK-OBJ
        `(G-VALUE MOVE-GROW-INTER-MENU :FEEDBACK-OBJ)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-GROW-PARM)
 (SYSTEM::%PUTD 'MOVE-GROW-GROW-PARM
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-GROW-PARM
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-GROW-PARM
        `(G-VALUE MOVE-GROW-INTER-MENU :GROW-PARM)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-MOVE-PARM)
 (SYSTEM::%PUTD 'MOVE-GROW-MOVE-PARM
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-MOVE-PARM
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-MOVE-PARM
        `(G-VALUE MOVE-GROW-INTER-MENU :MOVE-PARM)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-OTHER-BOX)
 (SYSTEM::%PUTD 'MOVE-GROW-OTHER-BOX
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-OTHER-BOX
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-OTHER-BOX
        `(G-VALUE MOVE-GROW-INTER-MENU :START-WHERE :CONTENTS
          :OTHER-BOX)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MOVE-GROW-OTHER-BUTTON)
 (SYSTEM::%PUTD 'MOVE-GROW-OTHER-BUTTON
  (SYSTEM::MAKE-MACRO
   (FUNCTION MOVE-GROW-OTHER-BUTTON
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (> (LENGTH SYSTEM::<MACRO-FORM>) 1.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* NIL
       (BLOCK MOVE-GROW-OTHER-BUTTON
        `(G-VALUE MOVE-GROW-INTER-MENU :START-WHERE :CONTENTS
          :OTHER-BUTTON)))))))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-UP-BOX-SLOTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(NEW-INTER SLOT-VALUE-LIST))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *BOX-LEFT-FORMULA*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *BOX-TOP-FORMULA*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *BOX-WIDTH-FORMULA*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *BOX-HEIGHT-FORMULA*)))
(PROGN
 (SYSTEM::C-DEFUN 'SET-BOX-SLOTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE-LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-INTERACTOR-NAME-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET INTERACTOR-NAME))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-ONE-THIS-AGG-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG-BOX BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-OBJ-PRESS-OVER-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(OBJ-BOX BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-OBJ-PROTOTYPES-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(INTER BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-FEEDBACK-PROTOTYPES-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(INTER BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-LINE-P-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PANEL VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-GROW-P-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PANEL VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'GROW-PARMS-FINAL-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-PARMS-FINAL-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-MIN-LENGTH-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-MIN-WIDTH-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-MIN-HEIGHT-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-INFER-OBJ-TO-CHANGE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GADGET VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-AGG-LEAVES (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-START-WHERE-OBJS-FOR-OBJ-TO-CHANGE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-WHERE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-OBJ-TO-CHANGE-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PANEL VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-FEEDBACK-OBJ-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FEEDBACK-OBJ-BOX BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-NIL-FEEDBACK-OBJ-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-FORMULA-FEEDBACK-OBJ-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BUTTON BUTTON-LABEL))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-ATTACH-POINT-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(INTER BUTTON))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-GROW-FINAL-FUNCTION-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LABELED-BOX STRING))))