#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G11757
     (CONS 'BBOX
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-BBOX (&KEY X1 Y1 X2 Y2 VALID-P)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 6.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 1.) (THE T X1))
     (SETF (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 2.) (THE T Y1))
     (SETF (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 3.) (THE T X2))
     (SETF (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 4.) (THE T Y2))
     (SETF (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 5.) (THE T VALID-P))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'BBOX 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-BBOX
     `(#(X1 (:X1) 1. (NIL) NIL T NIL) #(Y1 (:Y1) 2. (NIL) NIL T NIL)
       #(X2 (:X2) 3. (NIL) NIL T NIL) #(Y2 (:Y2) 4. (NIL) NIL T NIL)
       #(VALID-P (:VALID-P) 5. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'BBOX) (PROCLAIM '(INLINE BBOX-P))
  (DEFUN BBOX-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'BBOX SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-BBOX))
  (DEFUN COPY-BBOX (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION BBOX-X1 (BBOX) T)) (PROCLAIM '(INLINE BBOX-X1))
  (DEFUN BBOX-X1 #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'BBOX-X1 #3='SYSTEM::DEFSTRUCT-READER 'BBOX)
  (PROCLAIM '(FUNCTION BBOX-Y1 (BBOX) T)) (PROCLAIM '(INLINE BBOX-Y1))
  (DEFUN BBOX-Y1 #2# (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'BBOX-Y1 #3# 'BBOX) (PROCLAIM '(FUNCTION BBOX-X2 (BBOX) T))
  (PROCLAIM '(INLINE BBOX-X2))
  (DEFUN BBOX-X2 #2# (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'BBOX-X2 #3# 'BBOX) (PROCLAIM '(FUNCTION BBOX-Y2 (BBOX) T))
  (PROCLAIM '(INLINE BBOX-Y2))
  (DEFUN BBOX-Y2 #2# (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'BBOX-Y2 #3# 'BBOX)
  (PROCLAIM '(FUNCTION BBOX-VALID-P (BBOX) T))
  (PROCLAIM '(INLINE BBOX-VALID-P))
  (DEFUN BBOX-VALID-P #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'BBOX-VALID-P #3# 'BBOX)
  (DEFSETF BBOX-X1 #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 1. SYSTEM::VALUE))
  (SYSTEM::%PUT 'BBOX-X1 #7='SYSTEM::DEFSTRUCT-WRITER 'BBOX)
  (DEFSETF BBOX-Y1 #4# #5# (LIST #6# ''BBOX SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'BBOX-Y1 #7# 'BBOX)
  (DEFSETF BBOX-X2 #4# #5# (LIST #6# ''BBOX SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'BBOX-X2 #7# 'BBOX)
  (DEFSETF BBOX-Y2 #4# #5# (LIST #6# ''BBOX SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'BBOX-Y2 #7# 'BBOX)
  (DEFSETF BBOX-VALID-P #4# #5#
   (LIST #6# ''BBOX SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'BBOX-VALID-P #7# 'BBOX)
  (SETF (DOCUMENTATION 'BBOX 'STRUCTURE) NIL)
  (CLOS::DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD 'BBOX) 'BBOX))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-BBOX
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&KEY X1 Y1 X2 Y2 VALID-P))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-P)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-P))
    (BLOCK BBOX-P (SYSTEM::%STRUCTURE-TYPE-P 'BBOX SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-BBOX)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-BBOX (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-BBOX))
    (BLOCK COPY-BBOX (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION BBOX-X1 (BBOX) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-X1)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-X1
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-X1))
    (BLOCK BBOX-X1 (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION BBOX-Y1 (BBOX) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-Y1)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-Y1
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-Y1))
    (BLOCK BBOX-Y1 (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION BBOX-X2 (BBOX) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-X2)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-X2
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-X2))
    (BLOCK BBOX-X2 (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION BBOX-Y2 (BBOX) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-Y2)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-Y2
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-Y2))
    (BLOCK BBOX-Y2 (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 4.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION BBOX-VALID-P (BBOX) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE BBOX-VALID-P)))
(PROGN
 (SYSTEM::C-DEFUN 'BBOX-VALID-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN BBOX-VALID-P))
    (BLOCK BBOX-VALID-P
     (THE T (SYSTEM::%STRUCTURE-REF 'BBOX SYSTEM::OBJECT 5.))))))
(PROGN
 (LET NIL (REMPROP 'BBOX-X1 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'BBOX-X1 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-BBOX-X1
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK BBOX-X1
        (LIST 'SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'BBOX-X1 'SETF NIL) 'BBOX-X1))
(PROGN
 (LET NIL (REMPROP 'BBOX-Y1 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'BBOX-Y1 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-BBOX-Y1
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK BBOX-Y1
        (LIST 'SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'BBOX-Y1 'SETF NIL) 'BBOX-Y1))
(PROGN
 (LET NIL (REMPROP 'BBOX-X2 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'BBOX-X2 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-BBOX-X2
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK BBOX-X2
        (LIST 'SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'BBOX-X2 'SETF NIL) 'BBOX-X2))
(PROGN
 (LET NIL (REMPROP 'BBOX-Y2 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'BBOX-Y2 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-BBOX-Y2
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK BBOX-Y2
        (LIST 'SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'BBOX-Y2 'SETF NIL) 'BBOX-Y2))
(PROGN
 (LET NIL (REMPROP 'BBOX-VALID-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'BBOX-VALID-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-BBOX-VALID-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK BBOX-VALID-P
        (LIST 'SYSTEM::%STRUCTURE-STORE ''BBOX SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'BBOX-VALID-P 'SETF NIL) 'BBOX-VALID-P))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G11825
     (CONS 'UPDATE-INFO
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-UPDATE-INFO (&KEY WINDOW OLD-BBOX BITS)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 4.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 1.)
      (THE T WINDOW))
     (SETF (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 2.)
      (THE T OLD-BBOX))
     (SETF (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 3.)
      (THE T BITS))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'UPDATE-INFO 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-UPDATE-INFO
     `(#(WINDOW (:WINDOW) 1. (NIL) NIL T NIL)
       #(OLD-BBOX (:OLD-BBOX) 2. (NIL) NIL T NIL)
       #(BITS (:BITS) 3. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'UPDATE-INFO)
  (PROCLAIM '(INLINE UPDATE-INFO-P))
  (DEFUN UPDATE-INFO-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'UPDATE-INFO SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-UPDATE-INFO))
  (DEFUN COPY-UPDATE-INFO (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION UPDATE-INFO-WINDOW (UPDATE-INFO) T))
  (PROCLAIM '(INLINE UPDATE-INFO-WINDOW))
  (DEFUN UPDATE-INFO-WINDOW #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'UPDATE-INFO-WINDOW #3='SYSTEM::DEFSTRUCT-READER 'UPDATE-INFO)
  (PROCLAIM '(FUNCTION UPDATE-INFO-OLD-BBOX (UPDATE-INFO) T))
  (PROCLAIM '(INLINE UPDATE-INFO-OLD-BBOX))
  (DEFUN UPDATE-INFO-OLD-BBOX #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'UPDATE-INFO-OLD-BBOX #3# 'UPDATE-INFO)
  (PROCLAIM '(FUNCTION UPDATE-INFO-BITS (UPDATE-INFO) T))
  (PROCLAIM '(INLINE UPDATE-INFO-BITS))
  (DEFUN UPDATE-INFO-BITS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'UPDATE-INFO-BITS #3# 'UPDATE-INFO)
  (DEFSETF UPDATE-INFO-WINDOW #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''UPDATE-INFO SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'UPDATE-INFO-WINDOW #7='SYSTEM::DEFSTRUCT-WRITER 'UPDATE-INFO)
  (DEFSETF UPDATE-INFO-OLD-BBOX #4# #5#
   (LIST #6# ''UPDATE-INFO SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'UPDATE-INFO-OLD-BBOX #7# 'UPDATE-INFO)
  (DEFSETF UPDATE-INFO-BITS #4# #5#
   (LIST #6# ''UPDATE-INFO SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'UPDATE-INFO-BITS #7# 'UPDATE-INFO)
  (SETF (DOCUMENTATION 'UPDATE-INFO 'STRUCTURE) NIL)
  (DEFMETHOD PRINT-OBJECT ((SYSTEM::STRUCT UPDATE-INFO) STREAM)
   (PROGN
    (UPDATE-INFO-PRINT-FUNCTION SYSTEM::STRUCT STREAM SYSTEM::*PRIN-LEVEL*)))
  'UPDATE-INFO))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-UPDATE-INFO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&KEY WINDOW OLD-BBOX BITS))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE UPDATE-INFO-P)))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-INFO-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN UPDATE-INFO-P))
    (BLOCK UPDATE-INFO-P
     (SYSTEM::%STRUCTURE-TYPE-P 'UPDATE-INFO SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-UPDATE-INFO)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-UPDATE-INFO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-UPDATE-INFO))
    (BLOCK COPY-UPDATE-INFO (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION UPDATE-INFO-WINDOW (UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE UPDATE-INFO-WINDOW)))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-INFO-WINDOW
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN UPDATE-INFO-WINDOW))
    (BLOCK UPDATE-INFO-WINDOW
     (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION UPDATE-INFO-OLD-BBOX (UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE UPDATE-INFO-OLD-BBOX)))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-INFO-OLD-BBOX
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN UPDATE-INFO-OLD-BBOX))
    (BLOCK UPDATE-INFO-OLD-BBOX
     (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION UPDATE-INFO-BITS (UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE UPDATE-INFO-BITS)))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-INFO-BITS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN UPDATE-INFO-BITS))
    (BLOCK UPDATE-INFO-BITS
     (THE T (SYSTEM::%STRUCTURE-REF 'UPDATE-INFO SYSTEM::OBJECT 3.))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-WINDOW 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-WINDOW 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-WINDOW
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-WINDOW
        (LIST 'SYSTEM::%STRUCTURE-STORE ''UPDATE-INFO SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-WINDOW 'SETF NIL)
  'UPDATE-INFO-WINDOW))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-OLD-BBOX 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-OLD-BBOX 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-OLD-BBOX
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-OLD-BBOX
        (LIST 'SYSTEM::%STRUCTURE-STORE ''UPDATE-INFO SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-OLD-BBOX 'SETF NIL)
  'UPDATE-INFO-OLD-BBOX))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-BITS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-BITS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-BITS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-BITS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''UPDATE-INFO SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-BITS 'SETF NIL) 'UPDATE-INFO-BITS))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-OBJECT
  #S(SYSTEM::SIGNATURE :REQ-NUM 2. :OPT-NUM 0. :REST-P NIL :KEYS-P NIL
     :KEYWORDS NIL :ALLOW-P NIL)))
(PROGN
 (SYSTEM::C-PROCLAIM-CONSTANT 'NUMBER-OF-SLOTS-OF-UPDATE-INFO-STRUCT '3.))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'BIT-SETTER)
 (SYSTEM::%PUTD 'BIT-SETTER
  (SYSTEM::MAKE-MACRO
   (FUNCTION BIT-SETTER
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 4.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((OBJECT (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (BIT-POSITION (CADDR . #1#)) (VALUE (CADDDR . #1#)))
       (BLOCK BIT-SETTER
        (COND
         ((EQ VALUE T)
          `(SETF (UPDATE-INFO-BITS ,OBJECT)
            (LOGIOR (UPDATE-INFO-BITS ,OBJECT) ,(ASH 1. BIT-POSITION))))
         ((NULL VALUE)
          `(SETF (UPDATE-INFO-BITS ,OBJECT)
            (LOGAND (UPDATE-INFO-BITS ,OBJECT)
             ,(LOGNOT (ASH 1. BIT-POSITION)))))
         (T
          `(IF ,VALUE
            (SETF (UPDATE-INFO-BITS ,OBJECT)
             (LOGIOR (UPDATE-INFO-BITS ,OBJECT) ,(ASH 1. BIT-POSITION)))
            (SETF (UPDATE-INFO-BITS ,OBJECT)
             (LOGAND (UPDATE-INFO-BITS ,OBJECT)
              ,(LOGNOT (ASH 1. BIT-POSITION)))))))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-INFO-DIRTY-P)
 (SYSTEM::%PUTD 'UPDATE-INFO-DIRTY-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-INFO-DIRTY-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK UPDATE-INFO-DIRTY-P
        `(LOGBITP 0. (UPDATE-INFO-BITS ,OBJECT))))))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-DIRTY-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-DIRTY-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-DIRTY-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST VALUE)
      (LET* ((OBJECT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-DIRTY-P `(BIT-SETTER ,OBJECT 0. ,VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-DIRTY-P 'SETF NIL)
  'UPDATE-INFO-DIRTY-P))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-INFO-AGGREGATE-P)
 (SYSTEM::%PUTD 'UPDATE-INFO-AGGREGATE-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-INFO-AGGREGATE-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK UPDATE-INFO-AGGREGATE-P
        `(LOGBITP 1. (UPDATE-INFO-BITS ,OBJECT))))))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-AGGREGATE-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-AGGREGATE-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-AGGREGATE-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST VALUE)
      (LET* ((OBJECT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-AGGREGATE-P `(BIT-SETTER ,OBJECT 1. ,VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-AGGREGATE-P 'SETF NIL)
  'UPDATE-INFO-AGGREGATE-P))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-INFO-INVALID-P)
 (SYSTEM::%PUTD 'UPDATE-INFO-INVALID-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-INFO-INVALID-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK UPDATE-INFO-INVALID-P
        `(LOGBITP 2. (UPDATE-INFO-BITS ,OBJECT))))))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-INVALID-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-INVALID-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-INVALID-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST VALUE)
      (LET* ((OBJECT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-INVALID-P `(BIT-SETTER ,OBJECT 2. ,VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-INVALID-P 'SETF NIL)
  'UPDATE-INFO-INVALID-P))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-INFO-FORCE-COMPUTATION-P)
 (SYSTEM::%PUTD 'UPDATE-INFO-FORCE-COMPUTATION-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-INFO-FORCE-COMPUTATION-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK UPDATE-INFO-FORCE-COMPUTATION-P
        `(LOGBITP 3. (UPDATE-INFO-BITS ,OBJECT))))))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-FORCE-COMPUTATION-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-FORCE-COMPUTATION-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-FORCE-COMPUTATION-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST VALUE)
      (LET* ((OBJECT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-FORCE-COMPUTATION-P
        `(BIT-SETTER ,OBJECT 3. ,VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-FORCE-COMPUTATION-P 'SETF NIL)
  'UPDATE-INFO-FORCE-COMPUTATION-P))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-INFO-ON-FASTDRAW-LIST-P)
 (SYSTEM::%PUTD 'UPDATE-INFO-ON-FASTDRAW-LIST-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-INFO-ON-FASTDRAW-LIST-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK UPDATE-INFO-ON-FASTDRAW-LIST-P
        `(LOGBITP 4. (UPDATE-INFO-BITS ,OBJECT))))))))))
(PROGN
 (LET NIL (REMPROP 'UPDATE-INFO-ON-FASTDRAW-LIST-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'UPDATE-INFO-ON-FASTDRAW-LIST-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-UPDATE-INFO-ON-FASTDRAW-LIST-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST VALUE)
      (LET* ((OBJECT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK UPDATE-INFO-ON-FASTDRAW-LIST-P
        `(BIT-SETTER ,OBJECT 4. ,VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'UPDATE-INFO-ON-FASTDRAW-LIST-P 'SETF NIL)
  'UPDATE-INFO-ON-FASTDRAW-LIST-P))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-INFO-PRINT-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(STRUCT STREAM DEPTH))))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G12034
     (CONS 'WIN-UPDATE-INFO
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-WIN-UPDATE-INFO
    (&KEY FIX-UPDATE-SLOTS-OBJECTS INVALID-VIEW-OBJECTS INVALID-OBJECTS
     INVALID-XOR-FASTDRAWS INVALID-COPY-FASTDRAWS INVALID-SLOTS NEW-BBOX
     CLIP-MASK-1 CLIP-MASK-2 OLD-AGGREGATE WIDTH HEIGHT EXPOSED-BBOX)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 14.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 1.)
      (THE T FIX-UPDATE-SLOTS-OBJECTS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 2.)
      (THE T INVALID-VIEW-OBJECTS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 3.)
      (THE T INVALID-OBJECTS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 4.)
      (THE T INVALID-XOR-FASTDRAWS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 5.)
      (THE T INVALID-COPY-FASTDRAWS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 6.)
      (THE T INVALID-SLOTS))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 7.)
      (THE T NEW-BBOX))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 8.)
      (THE T CLIP-MASK-1))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 9.)
      (THE T CLIP-MASK-2))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 10.)
      (THE T OLD-AGGREGATE))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 11.)
      (THE T WIDTH))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 12.)
      (THE T HEIGHT))
     (SETF (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 13.)
      (THE T EXPOSED-BBOX))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'WIN-UPDATE-INFO 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-WIN-UPDATE-INFO
     `(#(FIX-UPDATE-SLOTS-OBJECTS (:FIX-UPDATE-SLOTS-OBJECTS) 1. (NIL) NIL T
         NIL)
       #(INVALID-VIEW-OBJECTS (:INVALID-VIEW-OBJECTS) 2. (NIL) NIL T NIL)
       #(INVALID-OBJECTS (:INVALID-OBJECTS) 3. (NIL) NIL T NIL)
       #(INVALID-XOR-FASTDRAWS (:INVALID-XOR-FASTDRAWS) 4. (NIL) NIL T NIL)
       #(INVALID-COPY-FASTDRAWS (:INVALID-COPY-FASTDRAWS) 5. (NIL) NIL T NIL)
       #(INVALID-SLOTS (:INVALID-SLOTS) 6. (NIL) NIL T NIL)
       #(NEW-BBOX (:NEW-BBOX) 7. (NIL) NIL T NIL)
       #(CLIP-MASK-1 (:CLIP-MASK-1) 8. (NIL) NIL T NIL)
       #(CLIP-MASK-2 (:CLIP-MASK-2) 9. (NIL) NIL T NIL)
       #(OLD-AGGREGATE (:OLD-AGGREGATE) 10. (NIL) NIL T NIL)
       #(WIDTH (:WIDTH) 11. (NIL) NIL T NIL)
       #(HEIGHT (:HEIGHT) 12. (NIL) NIL T NIL)
       #(EXPOSED-BBOX (:EXPOSED-BBOX) 13. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'WIN-UPDATE-INFO)
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-P))
  (DEFUN WIN-UPDATE-INFO-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'WIN-UPDATE-INFO SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-WIN-UPDATE-INFO))
  (DEFUN COPY-WIN-UPDATE-INFO (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM
   '(FUNCTION WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS))
  (DEFUN WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
   #3='SYSTEM::DEFSTRUCT-READER 'WIN-UPDATE-INFO)
  (PROCLAIM
   '(FUNCTION WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS))
  (DEFUN WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-INVALID-OBJECTS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-OBJECTS))
  (DEFUN WIN-UPDATE-INFO-INVALID-OBJECTS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-OBJECTS #3# 'WIN-UPDATE-INFO)
  (PROCLAIM
   '(FUNCTION WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS))
  (DEFUN WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS #3# 'WIN-UPDATE-INFO)
  (PROCLAIM
   '(FUNCTION WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS))
  (DEFUN WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-INVALID-SLOTS (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-SLOTS))
  (DEFUN WIN-UPDATE-INFO-INVALID-SLOTS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 6.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-SLOTS #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-NEW-BBOX (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-NEW-BBOX))
  (DEFUN WIN-UPDATE-INFO-NEW-BBOX #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 7.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-NEW-BBOX #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-CLIP-MASK-1 (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-CLIP-MASK-1))
  (DEFUN WIN-UPDATE-INFO-CLIP-MASK-1 #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 8.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-1 #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-CLIP-MASK-2 (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-CLIP-MASK-2))
  (DEFUN WIN-UPDATE-INFO-CLIP-MASK-2 #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 9.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-2 #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-OLD-AGGREGATE (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-OLD-AGGREGATE))
  (DEFUN WIN-UPDATE-INFO-OLD-AGGREGATE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 10.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-OLD-AGGREGATE #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-WIDTH (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-WIDTH))
  (DEFUN WIN-UPDATE-INFO-WIDTH #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 11.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-WIDTH #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-HEIGHT (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-HEIGHT))
  (DEFUN WIN-UPDATE-INFO-HEIGHT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 12.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-HEIGHT #3# 'WIN-UPDATE-INFO)
  (PROCLAIM '(FUNCTION WIN-UPDATE-INFO-EXPOSED-BBOX (WIN-UPDATE-INFO) T))
  (PROCLAIM '(INLINE WIN-UPDATE-INFO-EXPOSED-BBOX))
  (DEFUN WIN-UPDATE-INFO-EXPOSED-BBOX #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 13.)))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-EXPOSED-BBOX #3# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS #4=(SYSTEM::STRUCT)
   #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
   #7='SYSTEM::DEFSTRUCT-WRITER 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-INVALID-OBJECTS #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-OBJECTS #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-INVALID-SLOTS #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 6. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-SLOTS #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-NEW-BBOX #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 7. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-NEW-BBOX #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-CLIP-MASK-1 #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 8. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-1 #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-CLIP-MASK-2 #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 9. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-2 #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-OLD-AGGREGATE #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 10. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-OLD-AGGREGATE #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-WIDTH #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 11. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-WIDTH #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-HEIGHT #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 12. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-HEIGHT #7# 'WIN-UPDATE-INFO)
  (DEFSETF WIN-UPDATE-INFO-EXPOSED-BBOX #4# #5#
   (LIST #6# ''WIN-UPDATE-INFO SYSTEM::STRUCT 13. SYSTEM::VALUE))
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-EXPOSED-BBOX #7# 'WIN-UPDATE-INFO)
  (SETF (DOCUMENTATION 'WIN-UPDATE-INFO 'STRUCTURE) NIL)
  (DEFMETHOD PRINT-OBJECT ((SYSTEM::STRUCT WIN-UPDATE-INFO) STREAM)
   (PROGN
    (WIN-UPDATE-INFO-PRINT-FUNCTION SYSTEM::STRUCT STREAM
     SYSTEM::*PRIN-LEVEL*)))
  'WIN-UPDATE-INFO))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-WIN-UPDATE-INFO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(&KEY FIX-UPDATE-SLOTS-OBJECTS INVALID-VIEW-OBJECTS INVALID-OBJECTS
     INVALID-XOR-FASTDRAWS INVALID-COPY-FASTDRAWS INVALID-SLOTS NEW-BBOX
     CLIP-MASK-1 CLIP-MASK-2 OLD-AGGREGATE WIDTH HEIGHT EXPOSED-BBOX))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-P)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-P))
    (BLOCK WIN-UPDATE-INFO-P
     (SYSTEM::%STRUCTURE-TYPE-P 'WIN-UPDATE-INFO SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-WIN-UPDATE-INFO)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-WIN-UPDATE-INFO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-WIN-UPDATE-INFO))
    (BLOCK COPY-WIN-UPDATE-INFO (COPY-STRUCTURE STRUCTURE)))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS))
    (BLOCK WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 1.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS))
    (BLOCK WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 2.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-INVALID-OBJECTS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-OBJECTS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-INVALID-OBJECTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-INVALID-OBJECTS))
    (BLOCK WIN-UPDATE-INFO-INVALID-OBJECTS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 3.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS))
    (BLOCK WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 4.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS))
    (BLOCK WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 5.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-INVALID-SLOTS (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-INVALID-SLOTS)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-INVALID-SLOTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-INVALID-SLOTS))
    (BLOCK WIN-UPDATE-INFO-INVALID-SLOTS
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 6.))))))
(PROGN
 (SYSTEM::C-PROCLAIM '(FUNCTION WIN-UPDATE-INFO-NEW-BBOX (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-NEW-BBOX)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-NEW-BBOX
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-NEW-BBOX))
    (BLOCK WIN-UPDATE-INFO-NEW-BBOX
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 7.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-CLIP-MASK-1 (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-CLIP-MASK-1)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-CLIP-MASK-1
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-CLIP-MASK-1))
    (BLOCK WIN-UPDATE-INFO-CLIP-MASK-1
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 8.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-CLIP-MASK-2 (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-CLIP-MASK-2)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-CLIP-MASK-2
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-CLIP-MASK-2))
    (BLOCK WIN-UPDATE-INFO-CLIP-MASK-2
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 9.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-OLD-AGGREGATE (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-OLD-AGGREGATE)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-OLD-AGGREGATE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-OLD-AGGREGATE))
    (BLOCK WIN-UPDATE-INFO-OLD-AGGREGATE
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 10.))))))
(PROGN
 (SYSTEM::C-PROCLAIM '(FUNCTION WIN-UPDATE-INFO-WIDTH (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-WIDTH)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-WIDTH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-WIDTH))
    (BLOCK WIN-UPDATE-INFO-WIDTH
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 11.))))))
(PROGN
 (SYSTEM::C-PROCLAIM '(FUNCTION WIN-UPDATE-INFO-HEIGHT (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-HEIGHT)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-HEIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-HEIGHT))
    (BLOCK WIN-UPDATE-INFO-HEIGHT
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 12.))))))
(PROGN
 (SYSTEM::C-PROCLAIM
  '(FUNCTION WIN-UPDATE-INFO-EXPOSED-BBOX (WIN-UPDATE-INFO) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE WIN-UPDATE-INFO-EXPOSED-BBOX)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-EXPOSED-BBOX
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN WIN-UPDATE-INFO-EXPOSED-BBOX))
    (BLOCK WIN-UPDATE-INFO-EXPOSED-BBOX
     (THE T (SYSTEM::%STRUCTURE-REF 'WIN-UPDATE-INFO SYSTEM::OBJECT 13.))))))
(PROGN
 (LET NIL
  (REMPROP 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
   'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS 'SETF
   NIL)
  'WIN-UPDATE-INFO-FIX-UPDATE-SLOTS-OBJECTS))
(PROGN
 (LET NIL
  (REMPROP 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS 'SETF NIL)
  'WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-INVALID-OBJECTS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-OBJECTS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-INVALID-OBJECTS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-INVALID-OBJECTS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-INVALID-OBJECTS 'SETF NIL)
  'WIN-UPDATE-INFO-INVALID-OBJECTS))
(PROGN
 (LET NIL
  (REMPROP 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS 'SETF NIL)
  'WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS))
(PROGN
 (LET NIL
  (REMPROP 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS 'SETF
   NIL)
  'WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-INVALID-SLOTS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-INVALID-SLOTS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-INVALID-SLOTS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-INVALID-SLOTS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 6.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-INVALID-SLOTS 'SETF NIL)
  'WIN-UPDATE-INFO-INVALID-SLOTS))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-NEW-BBOX 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-NEW-BBOX 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-NEW-BBOX
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-NEW-BBOX
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 7.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-NEW-BBOX 'SETF NIL)
  'WIN-UPDATE-INFO-NEW-BBOX))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-CLIP-MASK-1 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-1 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-CLIP-MASK-1
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-CLIP-MASK-1
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 8.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-CLIP-MASK-1 'SETF NIL)
  'WIN-UPDATE-INFO-CLIP-MASK-1))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-CLIP-MASK-2 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-CLIP-MASK-2 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-CLIP-MASK-2
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-CLIP-MASK-2
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 9.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-CLIP-MASK-2 'SETF NIL)
  'WIN-UPDATE-INFO-CLIP-MASK-2))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-OLD-AGGREGATE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-OLD-AGGREGATE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-OLD-AGGREGATE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-OLD-AGGREGATE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 10.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-OLD-AGGREGATE 'SETF NIL)
  'WIN-UPDATE-INFO-OLD-AGGREGATE))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-WIDTH 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-WIDTH 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-WIDTH
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-WIDTH
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 11.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-WIDTH 'SETF NIL)
  'WIN-UPDATE-INFO-WIDTH))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-HEIGHT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-HEIGHT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-HEIGHT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-HEIGHT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 12.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-HEIGHT 'SETF NIL)
  'WIN-UPDATE-INFO-HEIGHT))
(PROGN
 (LET NIL (REMPROP 'WIN-UPDATE-INFO-EXPOSED-BBOX 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'WIN-UPDATE-INFO-EXPOSED-BBOX 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-WIN-UPDATE-INFO-EXPOSED-BBOX
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK WIN-UPDATE-INFO-EXPOSED-BBOX
        (LIST 'SYSTEM::%STRUCTURE-STORE ''WIN-UPDATE-INFO SYSTEM::STRUCT 13.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'WIN-UPDATE-INFO-EXPOSED-BBOX 'SETF NIL)
  'WIN-UPDATE-INFO-EXPOSED-BBOX))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-OBJECT
  #S(SYSTEM::SIGNATURE :REQ-NUM 2. :OPT-NUM 0. :REST-P NIL :KEYS-P NIL
     :KEYWORDS NIL :ALLOW-P NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'WIN-UPDATE-INFO-PRINT-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(STRUCT STREAM DEPTH))))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G12257
     (CONS 'OPAL-GC
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-OPAL-GC
    (&KEY GCONTEXT OPAL-STYLE FUNCTION FOREGROUND BACKGROUND LINE-WIDTH
     LINE-STYLE CAP-STYLE JOIN-STYLE DASHES FONT FILL-STYLE FILL-RULE STIPPLE
     CLIP-MASK STORED-CLIP-MASK)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 17.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 1.)
      (THE T GCONTEXT))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 2.)
      (THE T OPAL-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 3.)
      (THE T FUNCTION))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 4.)
      (THE T FOREGROUND))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 5.)
      (THE T BACKGROUND))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 6.)
      (THE T LINE-WIDTH))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 7.)
      (THE T LINE-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 8.)
      (THE T CAP-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 9.)
      (THE T JOIN-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 10.) (THE T DASHES))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 11.) (THE T FONT))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 12.)
      (THE T FILL-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 13.)
      (THE T FILL-RULE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 14.)
      (THE T STIPPLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 15.)
      (THE T CLIP-MASK))
     (SETF (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 16.)
      (THE T STORED-CLIP-MASK))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'OPAL-GC 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-OPAL-GC
     `(#(GCONTEXT (:GCONTEXT) 1. (NIL) NIL T NIL)
       #(OPAL-STYLE (:OPAL-STYLE) 2. (NIL) NIL T NIL)
       #(FUNCTION (:FUNCTION) 3. (NIL) NIL T NIL)
       #(FOREGROUND (:FOREGROUND) 4. (NIL) NIL T NIL)
       #(BACKGROUND (:BACKGROUND) 5. (NIL) NIL T NIL)
       #(LINE-WIDTH (:LINE-WIDTH) 6. (NIL) NIL T NIL)
       #(LINE-STYLE (:LINE-STYLE) 7. (NIL) NIL T NIL)
       #(CAP-STYLE (:CAP-STYLE) 8. (NIL) NIL T NIL)
       #(JOIN-STYLE (:JOIN-STYLE) 9. (NIL) NIL T NIL)
       #(DASHES (:DASHES) 10. (NIL) NIL T NIL)
       #(FONT (:FONT) 11. (NIL) NIL T NIL)
       #(FILL-STYLE (:FILL-STYLE) 12. (NIL) NIL T NIL)
       #(FILL-RULE (:FILL-RULE) 13. (NIL) NIL T NIL)
       #(STIPPLE (:STIPPLE) 14. (NIL) NIL T NIL)
       #(CLIP-MASK (:CLIP-MASK) 15. (NIL) NIL T NIL)
       #(STORED-CLIP-MASK (:STORED-CLIP-MASK) 16. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'OPAL-GC) (PROCLAIM '(INLINE OPAL-GC-P))
  (DEFUN OPAL-GC-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'OPAL-GC SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-OPAL-GC))
  (DEFUN COPY-OPAL-GC (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION OPAL-GC-GCONTEXT (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-GCONTEXT))
  (DEFUN OPAL-GC-GCONTEXT #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'OPAL-GC-GCONTEXT #3='SYSTEM::DEFSTRUCT-READER 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-OPAL-STYLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-OPAL-STYLE))
  (DEFUN OPAL-GC-OPAL-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'OPAL-GC-OPAL-STYLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-FUNCTION (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-FUNCTION))
  (DEFUN OPAL-GC-FUNCTION #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'OPAL-GC-FUNCTION #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-FOREGROUND (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-FOREGROUND))
  (DEFUN OPAL-GC-FOREGROUND #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'OPAL-GC-FOREGROUND #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-BACKGROUND (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-BACKGROUND))
  (DEFUN OPAL-GC-BACKGROUND #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'OPAL-GC-BACKGROUND #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-LINE-WIDTH (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-LINE-WIDTH))
  (DEFUN OPAL-GC-LINE-WIDTH #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 6.)))
  (SYSTEM::%PUT 'OPAL-GC-LINE-WIDTH #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-LINE-STYLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-LINE-STYLE))
  (DEFUN OPAL-GC-LINE-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 7.)))
  (SYSTEM::%PUT 'OPAL-GC-LINE-STYLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-CAP-STYLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-CAP-STYLE))
  (DEFUN OPAL-GC-CAP-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 8.)))
  (SYSTEM::%PUT 'OPAL-GC-CAP-STYLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-JOIN-STYLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-JOIN-STYLE))
  (DEFUN OPAL-GC-JOIN-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 9.)))
  (SYSTEM::%PUT 'OPAL-GC-JOIN-STYLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-DASHES (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-DASHES))
  (DEFUN OPAL-GC-DASHES #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 10.)))
  (SYSTEM::%PUT 'OPAL-GC-DASHES #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-FONT (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-FONT))
  (DEFUN OPAL-GC-FONT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 11.)))
  (SYSTEM::%PUT 'OPAL-GC-FONT #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-FILL-STYLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-FILL-STYLE))
  (DEFUN OPAL-GC-FILL-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 12.)))
  (SYSTEM::%PUT 'OPAL-GC-FILL-STYLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-FILL-RULE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-FILL-RULE))
  (DEFUN OPAL-GC-FILL-RULE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 13.)))
  (SYSTEM::%PUT 'OPAL-GC-FILL-RULE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-STIPPLE (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-STIPPLE))
  (DEFUN OPAL-GC-STIPPLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 14.)))
  (SYSTEM::%PUT 'OPAL-GC-STIPPLE #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-CLIP-MASK (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-CLIP-MASK))
  (DEFUN OPAL-GC-CLIP-MASK #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 15.)))
  (SYSTEM::%PUT 'OPAL-GC-CLIP-MASK #3# 'OPAL-GC)
  (PROCLAIM '(FUNCTION OPAL-GC-STORED-CLIP-MASK (OPAL-GC) T))
  (PROCLAIM '(INLINE OPAL-GC-STORED-CLIP-MASK))
  (DEFUN OPAL-GC-STORED-CLIP-MASK #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 16.)))
  (SYSTEM::%PUT 'OPAL-GC-STORED-CLIP-MASK #3# 'OPAL-GC)
  (DEFSETF OPAL-GC-GCONTEXT #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-GCONTEXT #7='SYSTEM::DEFSTRUCT-WRITER 'OPAL-GC)
  (DEFSETF OPAL-GC-OPAL-STYLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-OPAL-STYLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-FUNCTION #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-FUNCTION #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-FOREGROUND #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-FOREGROUND #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-BACKGROUND #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-BACKGROUND #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-LINE-WIDTH #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 6. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-LINE-WIDTH #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-LINE-STYLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 7. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-LINE-STYLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-CAP-STYLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 8. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-CAP-STYLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-JOIN-STYLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 9. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-JOIN-STYLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-DASHES #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 10. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-DASHES #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-FONT #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 11. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-FONT #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-FILL-STYLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 12. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-FILL-STYLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-FILL-RULE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 13. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-FILL-RULE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-STIPPLE #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 14. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-STIPPLE #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-CLIP-MASK #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 15. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-CLIP-MASK #7# 'OPAL-GC)
  (DEFSETF OPAL-GC-STORED-CLIP-MASK #4# #5#
   (LIST #6# ''OPAL-GC SYSTEM::STRUCT 16. SYSTEM::VALUE))
  (SYSTEM::%PUT 'OPAL-GC-STORED-CLIP-MASK #7# 'OPAL-GC)
  (SETF (DOCUMENTATION 'OPAL-GC 'STRUCTURE) NIL)
  (DEFMETHOD PRINT-OBJECT ((SYSTEM::STRUCT OPAL-GC) STREAM)
   (PROGN (OPAL-GC-PRINT-FUNCTION SYSTEM::STRUCT STREAM SYSTEM::*PRIN-LEVEL*)))
  'OPAL-GC))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-OPAL-GC
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(&KEY GCONTEXT OPAL-STYLE FUNCTION FOREGROUND BACKGROUND LINE-WIDTH
     LINE-STYLE CAP-STYLE JOIN-STYLE DASHES FONT FILL-STYLE FILL-RULE STIPPLE
     CLIP-MASK STORED-CLIP-MASK))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-P)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-P))
    (BLOCK OPAL-GC-P (SYSTEM::%STRUCTURE-TYPE-P 'OPAL-GC SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-OPAL-GC)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-OPAL-GC
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-OPAL-GC))
    (BLOCK COPY-OPAL-GC (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-GCONTEXT (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-GCONTEXT)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-GCONTEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-GCONTEXT))
    (BLOCK OPAL-GC-GCONTEXT
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-OPAL-STYLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-OPAL-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-OPAL-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-OPAL-STYLE))
    (BLOCK OPAL-GC-OPAL-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-FUNCTION (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-FUNCTION)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-FUNCTION))
    (BLOCK OPAL-GC-FUNCTION
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-FOREGROUND (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-FOREGROUND)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-FOREGROUND
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-FOREGROUND))
    (BLOCK OPAL-GC-FOREGROUND
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 4.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-BACKGROUND (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-BACKGROUND)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-BACKGROUND
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-BACKGROUND))
    (BLOCK OPAL-GC-BACKGROUND
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 5.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-LINE-WIDTH (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-LINE-WIDTH)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-LINE-WIDTH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-LINE-WIDTH))
    (BLOCK OPAL-GC-LINE-WIDTH
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 6.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-LINE-STYLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-LINE-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-LINE-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-LINE-STYLE))
    (BLOCK OPAL-GC-LINE-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 7.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-CAP-STYLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-CAP-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-CAP-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-CAP-STYLE))
    (BLOCK OPAL-GC-CAP-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 8.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-JOIN-STYLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-JOIN-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-JOIN-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-JOIN-STYLE))
    (BLOCK OPAL-GC-JOIN-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 9.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-DASHES (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-DASHES)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-DASHES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-DASHES))
    (BLOCK OPAL-GC-DASHES
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 10.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-FONT (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-FONT)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-FONT))
    (BLOCK OPAL-GC-FONT
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 11.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-FILL-STYLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-FILL-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-FILL-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-FILL-STYLE))
    (BLOCK OPAL-GC-FILL-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 12.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-FILL-RULE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-FILL-RULE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-FILL-RULE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-FILL-RULE))
    (BLOCK OPAL-GC-FILL-RULE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 13.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-STIPPLE (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-STIPPLE)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-STIPPLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-STIPPLE))
    (BLOCK OPAL-GC-STIPPLE
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 14.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-CLIP-MASK (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-CLIP-MASK)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-CLIP-MASK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-CLIP-MASK))
    (BLOCK OPAL-GC-CLIP-MASK
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 15.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION OPAL-GC-STORED-CLIP-MASK (OPAL-GC) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE OPAL-GC-STORED-CLIP-MASK)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-STORED-CLIP-MASK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN OPAL-GC-STORED-CLIP-MASK))
    (BLOCK OPAL-GC-STORED-CLIP-MASK
     (THE T (SYSTEM::%STRUCTURE-REF 'OPAL-GC SYSTEM::OBJECT 16.))))))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-GCONTEXT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-GCONTEXT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-GCONTEXT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-GCONTEXT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-GCONTEXT 'SETF NIL) 'OPAL-GC-GCONTEXT))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-OPAL-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-OPAL-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-OPAL-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-OPAL-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-OPAL-STYLE 'SETF NIL)
  'OPAL-GC-OPAL-STYLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-FUNCTION 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-FUNCTION 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-FUNCTION
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-FUNCTION
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-FUNCTION 'SETF NIL) 'OPAL-GC-FUNCTION))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-FOREGROUND 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-FOREGROUND 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-FOREGROUND
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-FOREGROUND
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-FOREGROUND 'SETF NIL)
  'OPAL-GC-FOREGROUND))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-BACKGROUND 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-BACKGROUND 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-BACKGROUND
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-BACKGROUND
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-BACKGROUND 'SETF NIL)
  'OPAL-GC-BACKGROUND))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-LINE-WIDTH 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-LINE-WIDTH 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-LINE-WIDTH
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-LINE-WIDTH
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 6.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-LINE-WIDTH 'SETF NIL)
  'OPAL-GC-LINE-WIDTH))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-LINE-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-LINE-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-LINE-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-LINE-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 7.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-LINE-STYLE 'SETF NIL)
  'OPAL-GC-LINE-STYLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-CAP-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-CAP-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-CAP-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-CAP-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 8.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-CAP-STYLE 'SETF NIL)
  'OPAL-GC-CAP-STYLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-JOIN-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-JOIN-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-JOIN-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-JOIN-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 9.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-JOIN-STYLE 'SETF NIL)
  'OPAL-GC-JOIN-STYLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-DASHES 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-DASHES 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-DASHES
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-DASHES
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 10.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-DASHES 'SETF NIL) 'OPAL-GC-DASHES))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-FONT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-FONT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-FONT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-FONT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 11.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-FONT 'SETF NIL) 'OPAL-GC-FONT))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-FILL-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-FILL-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-FILL-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-FILL-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 12.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-FILL-STYLE 'SETF NIL)
  'OPAL-GC-FILL-STYLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-FILL-RULE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-FILL-RULE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-FILL-RULE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-FILL-RULE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 13.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-FILL-RULE 'SETF NIL)
  'OPAL-GC-FILL-RULE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-STIPPLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-STIPPLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-STIPPLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-STIPPLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 14.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-STIPPLE 'SETF NIL) 'OPAL-GC-STIPPLE))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-CLIP-MASK 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-CLIP-MASK 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-CLIP-MASK
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-CLIP-MASK
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 15.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-CLIP-MASK 'SETF NIL)
  'OPAL-GC-CLIP-MASK))
(PROGN
 (LET NIL (REMPROP 'OPAL-GC-STORED-CLIP-MASK 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'OPAL-GC-STORED-CLIP-MASK 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-OPAL-GC-STORED-CLIP-MASK
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK OPAL-GC-STORED-CLIP-MASK
        (LIST 'SYSTEM::%STRUCTURE-STORE ''OPAL-GC SYSTEM::STRUCT 16.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'OPAL-GC-STORED-CLIP-MASK 'SETF NIL)
  'OPAL-GC-STORED-CLIP-MASK))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-OBJECT
  #S(SYSTEM::SIGNATURE :REQ-NUM 2. :OPT-NUM 0. :REST-P NIL :KEYS-P NIL
     :KEYWORDS NIL :ALLOW-P NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OPAL-GC-PRINT-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GC STREAM DEPTH))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *FREE-CONS*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *FONT-HASH-TABLE*)))
(PROGN
 (SYSTEM::C-DEFUN 'FIX-FONT-PATH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PATH-ARGUMENT))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-NULL-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(S))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MERGE-BBOX)
 (SYSTEM::%PUTD 'MERGE-BBOX
  (SYSTEM::MAKE-MACRO
   (FUNCTION MERGE-BBOX
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((DEST-BBOX (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (SOURCE-BBOX (CADDR . #1#)))
       (BLOCK MERGE-BBOX
        `(WHEN (BBOX-VALID-P ,SOURCE-BBOX)
          (IF (BBOX-VALID-P ,DEST-BBOX)
           (PROGN
            (SETF (BBOX-X1 ,DEST-BBOX)
             (MIN (BBOX-X1 ,DEST-BBOX) (BBOX-X1 ,SOURCE-BBOX)))
            (SETF (BBOX-Y1 ,DEST-BBOX)
             (MIN (BBOX-Y1 ,DEST-BBOX) (BBOX-Y1 ,SOURCE-BBOX)))
            (SETF (BBOX-X2 ,DEST-BBOX)
             (MAX (BBOX-X2 ,DEST-BBOX) (BBOX-X2 ,SOURCE-BBOX)))
            (SETF (BBOX-Y2 ,DEST-BBOX)
             (MAX (BBOX-Y2 ,DEST-BBOX) (BBOX-Y2 ,SOURCE-BBOX))))
           (PROGN (SETF (BBOX-X1 ,DEST-BBOX) (BBOX-X1 ,SOURCE-BBOX))
            (SETF (BBOX-Y1 ,DEST-BBOX) (BBOX-Y1 ,SOURCE-BBOX))
            (SETF (BBOX-X2 ,DEST-BBOX) (BBOX-X2 ,SOURCE-BBOX))
            (SETF (BBOX-Y2 ,DEST-BBOX) (BBOX-Y2 ,SOURCE-BBOX))
            (SETF (BBOX-VALID-P ,DEST-BBOX) T))))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'COPY-BBOX-DIMS)
 (SYSTEM::%PUTD 'COPY-BBOX-DIMS
  (SYSTEM::MAKE-MACRO
   (FUNCTION COPY-BBOX-DIMS
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((DEST-BBOX (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (SOURCE-BBOX (CADDR . #1#)))
       (BLOCK COPY-BBOX-DIMS
        `(PROGN (SETF (BBOX-X1 ,DEST-BBOX) (BBOX-X1 ,SOURCE-BBOX))
          (SETF (BBOX-Y1 ,DEST-BBOX) (BBOX-Y1 ,SOURCE-BBOX))
          (SETF (BBOX-X2 ,DEST-BBOX) (BBOX-X2 ,SOURCE-BBOX))
          (SETF (BBOX-Y2 ,DEST-BBOX) (BBOX-Y2 ,SOURCE-BBOX)))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-BBOX-FN
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(DEST-BBOX SOURCE-BBOX))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'BBOX-DIMS-DIFFER)
 (SYSTEM::%PUTD 'BBOX-DIMS-DIFFER
  (SYSTEM::MAKE-MACRO
   (FUNCTION BBOX-DIMS-DIFFER
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((BB1 (CADR . #1=(SYSTEM::<MACRO-FORM>))) (BB2 (CADDR . #1#)))
       (BLOCK BBOX-DIMS-DIFFER
        `(NOT
          (AND (= (BBOX-X1 ,BB1) (BBOX-X1 ,BB2))
           (= (BBOX-Y1 ,BB1) (BBOX-Y1 ,BB2)) (= (BBOX-X2 ,BB1) (BBOX-X2 ,BB2))
           (= (BBOX-Y2 ,BB1) (BBOX-Y2 ,BB2))))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'UPDATE-BBOX)
 (SYSTEM::%PUTD 'UPDATE-BBOX
  (SYSTEM::MAKE-MACRO
   (FUNCTION UPDATE-BBOX
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((OBJECT (CADR . #1=(SYSTEM::<MACRO-FORM>))) (BBOX (CADDR . #1#)))
       (BLOCK UPDATE-BBOX
        `(LET ((LEFT (G-VALUE ,OBJECT :LEFT)) (TOP (G-VALUE ,OBJECT :TOP)))
          (SETF (BBOX-X1 ,BBOX) LEFT) (SETF (BBOX-Y1 ,BBOX) TOP)
          (SETF (BBOX-X2 ,BBOX) (+ LEFT (G-VALUE ,OBJECT :WIDTH)))
          (SETF (BBOX-Y2 ,BBOX) (+ TOP (G-VALUE ,OBJECT :HEIGHT)))
          (SETF (BBOX-VALID-P ,BBOX) T))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'BBOX-INTERSECT-P)
 (SYSTEM::%PUTD 'BBOX-INTERSECT-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION BBOX-INTERSECT-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((BB1 (CADR . #1=(SYSTEM::<MACRO-FORM>))) (BB2 (CADDR . #1#)))
       (BLOCK BBOX-INTERSECT-P
        `(AND (<= (BBOX-X1 ,BB1) (BBOX-X2 ,BB2))
          (<= (BBOX-X1 ,BB2) (BBOX-X2 ,BB1)) (<= (BBOX-Y1 ,BB1) (BBOX-Y2 ,BB2))
          (<= (BBOX-Y1 ,BB2) (BBOX-Y2 ,BB1)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'BBOX-INTERSECTS-EITHER-P)
 (SYSTEM::%PUTD 'BBOX-INTERSECTS-EITHER-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION BBOX-INTERSECTS-EITHER-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 4.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((BBOX (CADR . #1=(SYSTEM::<MACRO-FORM>))) (BB1 (CADDR . #1#))
        (BB2 (CADDDR . #1#)))
       (BLOCK BBOX-INTERSECTS-EITHER-P
        `(OR (BBOX-INTERSECT-P ,BBOX ,BB1)
          (AND ,BB2 (BBOX-INTERSECT-P ,BBOX ,BB2)))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'ERASE-BBOX
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(BB A-WINDOW BUFFER))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'BBOX-TO-CLIP-MASK)
 (SYSTEM::%PUTD 'BBOX-TO-CLIP-MASK
  (SYSTEM::MAKE-MACRO
   (FUNCTION BBOX-TO-CLIP-MASK
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((BB (CADR . #1=(SYSTEM::<MACRO-FORM>))) (CLIP-MASK (CADDR . #1#)))
       (BLOCK BBOX-TO-CLIP-MASK
        `(LET ((CM ,CLIP-MASK)) (SETF (CAR CM) (BBOX-X1 ,BB))
          (SETF (CAR (SETQ CM (CDR CM))) (BBOX-Y1 ,BB))
          (SETF (CAR (SETQ CM (CDR CM))) (- (BBOX-X2 ,BB) (BBOX-X1 ,BB)))
          (SETF (CADR CM) (- (BBOX-Y2 ,BB) (BBOX-Y1 ,BB))))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'PROPAGATE-DIRTY-BIT)
 (SYSTEM::%PUTD 'PROPAGATE-DIRTY-BIT
  (SYSTEM::MAKE-MACRO
   (FUNCTION PROPAGATE-DIRTY-BIT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((OBJECT (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (UPDATE-INFO (CADDR . #1#)))
       (BLOCK PROPAGATE-DIRTY-BIT
        `(UNLESS (UPDATE-INFO-DIRTY-P ,UPDATE-INFO)
          (LET ((TEMP ,OBJECT) (TEMP-UPDATE-INFO ,UPDATE-INFO))
           (LOOP (SETF (UPDATE-INFO-DIRTY-P TEMP-UPDATE-INFO) T)
            (IF
             (OR (NULL (SETQ TEMP (G-LOCAL-VALUE TEMP :PARENT)))
              (UPDATE-INFO-DIRTY-P
               (SETQ TEMP-UPDATE-INFO (G-LOCAL-VALUE TEMP :UPDATE-INFO))))
             (RETURN)))))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'GET-CONS)
 (SYSTEM::%PUTD 'GET-CONS
  (SYSTEM::MAKE-MACRO
   (FUNCTION GET-CONS
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((THE-CAR (CADR . #1=(SYSTEM::<MACRO-FORM>))) (THE-CDR (CADDR . #1#)))
       (BLOCK GET-CONS
        `(LET ((CONS-CELL *FREE-CONS*))
          (IF CONS-CELL
           (PROGN (SETF *FREE-CONS* (CDR *FREE-CONS*))
            (SETF (CAR CONS-CELL) ,THE-CAR) (SETF (CDR CONS-CELL) ,THE-CDR)
            CONS-CELL)
           (CONS ,THE-CAR ,THE-CDR)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'FREE-CONS)
 (SYSTEM::%PUTD 'FREE-CONS
  (SYSTEM::MAKE-MACRO
   (FUNCTION FREE-CONS
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((CONS-CELL (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK FREE-CONS
        `(PROGN (SETF (CDR ,CONS-CELL) *FREE-CONS*)
          (SETF *FREE-CONS* ,CONS-CELL))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'FREE-LIST)
 (SYSTEM::%PUTD 'FREE-LIST
  (SYSTEM::MAKE-MACRO
   (FUNCTION FREE-LIST
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((THE-LIST (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK FREE-LIST
        `(WHEN ,THE-LIST
          (LET ((LAST-CDR (LAST ,THE-LIST))) (SETF (CDR LAST-CDR) *FREE-CONS*)
           (SETF *FREE-CONS* ,THE-LIST)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'NORMAL-INVALIDATE)
 (SYSTEM::%PUTD 'NORMAL-INVALIDATE
  (SYSTEM::MAKE-MACRO
   (FUNCTION NORMAL-INVALIDATE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GOB (CADR . #1=(SYSTEM::<MACRO-FORM>))) (WIN-INFO (CADDR . #1#)))
       (BLOCK NORMAL-INVALIDATE
        `(SETF (WIN-UPDATE-INFO-INVALID-OBJECTS ,WIN-INFO)
          (GET-CONS ,GOB (WIN-UPDATE-INFO-INVALID-OBJECTS ,WIN-INFO)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'XOR-INVALIDATE)
 (SYSTEM::%PUTD 'XOR-INVALIDATE
  (SYSTEM::MAKE-MACRO
   (FUNCTION XOR-INVALIDATE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GOB (CADR . #1=(SYSTEM::<MACRO-FORM>))) (WIN-INFO (CADDR . #1#)))
       (BLOCK XOR-INVALIDATE
        `(SETF (WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS ,WIN-INFO)
          (GET-CONS ,GOB
           (WIN-UPDATE-INFO-INVALID-XOR-FASTDRAWS ,WIN-INFO)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'COPY-INVALIDATE)
 (SYSTEM::%PUTD 'COPY-INVALIDATE
  (SYSTEM::MAKE-MACRO
   (FUNCTION COPY-INVALIDATE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GOB (CADR . #1=(SYSTEM::<MACRO-FORM>))) (WIN-INFO (CADDR . #1#)))
       (BLOCK COPY-INVALIDATE
        `(SETF (WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS ,WIN-INFO)
          (GET-CONS ,GOB
           (WIN-UPDATE-INFO-INVALID-COPY-FASTDRAWS ,WIN-INFO)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'AGGREGATE-INVALIDATE)
 (SYSTEM::%PUTD 'AGGREGATE-INVALIDATE
  (SYSTEM::MAKE-MACRO
   (FUNCTION AGGREGATE-INVALIDATE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GOB (CADR . #1=(SYSTEM::<MACRO-FORM>))) (WIN-INFO (CADDR . #1#)))
       (BLOCK AGGREGATE-INVALIDATE
        `(SETF (WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS ,WIN-INFO)
          (GET-CONS ,GOB
           (WIN-UPDATE-INFO-INVALID-VIEW-OBJECTS ,WIN-INFO)))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MAKE-OBJECT-INVALID)
 (SYSTEM::%PUTD 'MAKE-OBJECT-INVALID
  (SYSTEM::MAKE-MACRO
   (FUNCTION MAKE-OBJECT-INVALID
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 4.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((GOB (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (GOB-UPDATE-INFO (CADDR . #1#)) (THE-WINDOW (CADDDR . #1#)))
       (BLOCK MAKE-OBJECT-INVALID
        `(LET ((W-INFO (G-LOCAL-VALUE ,THE-WINDOW :WIN-UPDATE-INFO)))
          (IF (UPDATE-INFO-AGGREGATE-P ,GOB-UPDATE-INFO)
           (AGGREGATE-INVALIDATE ,GOB W-INFO)
           (CASE (G-VALUE ,GOB :FAST-REDRAW-P)
            ((NIL) (NORMAL-INVALIDATE ,GOB W-INFO))
            ((T) (XOR-INVALIDATE ,GOB W-INFO))
            (T (COPY-INVALIDATE ,GOB W-INFO))))
          (SETF (UPDATE-INFO-INVALID-P ,GOB-UPDATE-INFO) T))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'NEW-GARNET-WINDOW-NAME
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *AUXILLIARY-RECONNECT-ROUTINES*)))