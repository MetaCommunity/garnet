#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN
 (EXPORT
  '(MULTIFONT-TEXT SET-CURSOR-VISIBLE SET-CURSOR-TO-X-Y-POSITION
    SET-CURSOR-TO-LINE-CHAR-POSITION GET-CURSOR-LINE-CHAR-POSITION
    GO-TO-NEXT-CHAR GO-TO-PREV-CHAR GO-TO-NEXT-WORD GO-TO-PREV-WORD
    GO-TO-NEXT-LINE GO-TO-PREV-LINE GO-TO-BEGINNING-OF-TEXT GO-TO-END-OF-TEXT
    GO-TO-BEGINNING-OF-LINE GO-TO-END-OF-LINE FETCH-NEXT-CHAR FETCH-PREV-CHAR
    TOGGLE-SELECTION SET-SELECTION-TO-X-Y-POSITION
    SET-SELECTION-TO-LINE-CHAR-POSITION GET-SELECTION-LINE-CHAR-POSITION
    CHANGE-FONT-OF-SELECTION CHANGE-COLOR-OF-SELECTION ADD-CHAR DELETE-CHAR
    DELETE-PREV-CHAR INSERT-STRING ADD-OBJECT SEARCH-FOR-MARK
    SEARCH-BACKWARDS-FOR-MARK BETWEEN-MARKS-P MARK INSERT-MARK INSERT-TEXT
    DELETE-SUBSTRING DELETE-WORD DELETE-PREV-WORD KILL-REST-OF-LINE
    COPY-SELECTED-TEXT DELETE-SELECTION SET-TEXT GET-STRING GET-TEXT
    GET-OBJECTS NOTICE-RESIZE-OBJECT TEXT-TO-PURE-LIST PURE-LIST-TO-TEXT
    TEXT-TO-STRING CONCATENATE-TEXT EMPTY-TEXT-P)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *DEFAULT-COLOR*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *DELIM-CHARS*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *FREE-LINE-LIST*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *FREE-FRAG-HEAD*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *FREE-MARK-HEAD*)))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G18955
     (CONS 'FRAG
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-FRAG
    (&KEY OBJECT-P OBJECT STRING FCOLOR BCOLOR LENGTH FONT WIDTH ASCENT DESCENT
     LINE-STYLE START-HIGHLIGHT END-HIGHLIGHT PREV NEXT BREAK-P)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 17.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 1.) (THE T OBJECT-P))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 2.) (THE T OBJECT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 3.) (THE T STRING))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 4.) (THE T FCOLOR))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 5.) (THE T BCOLOR))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 6.) (THE T LENGTH))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 7.) (THE T FONT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 8.) (THE T WIDTH))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 9.) (THE T ASCENT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 10.) (THE T DESCENT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 11.)
      (THE T LINE-STYLE))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 12.)
      (THE T START-HIGHLIGHT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 13.)
      (THE T END-HIGHLIGHT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 14.) (THE T PREV))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 15.) (THE T NEXT))
     (SETF (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 16.) (THE T BREAK-P))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'FRAG 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-FRAG
     `(#(OBJECT-P (:OBJECT-P) 1. (NIL) NIL T NIL)
       #(OBJECT (:OBJECT) 2. (NIL) NIL T NIL)
       #(STRING (:STRING) 3. (NIL) NIL T NIL)
       #(FCOLOR (:FCOLOR) 4. (NIL) NIL T NIL)
       #(BCOLOR (:BCOLOR) 5. (NIL) NIL T NIL)
       #(LENGTH (:LENGTH) 6. (NIL) NIL T NIL)
       #(FONT (:FONT) 7. (NIL) NIL T NIL) #(WIDTH (:WIDTH) 8. (NIL) NIL T NIL)
       #(ASCENT (:ASCENT) 9. (NIL) NIL T NIL)
       #(DESCENT (:DESCENT) 10. (NIL) NIL T NIL)
       #(LINE-STYLE (:LINE-STYLE) 11. (NIL) NIL T NIL)
       #(START-HIGHLIGHT (:START-HIGHLIGHT) 12. (NIL) NIL T NIL)
       #(END-HIGHLIGHT (:END-HIGHLIGHT) 13. (NIL) NIL T NIL)
       #(PREV (:PREV) 14. (NIL) NIL T NIL) #(NEXT (:NEXT) 15. (NIL) NIL T NIL)
       #(BREAK-P (:BREAK-P) 16. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'FRAG) (PROCLAIM '(INLINE FRAG-P))
  (DEFUN FRAG-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'FRAG SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-FRAG))
  (DEFUN COPY-FRAG (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION FRAG-OBJECT-P (FRAG) T))
  (PROCLAIM '(INLINE FRAG-OBJECT-P))
  (DEFUN FRAG-OBJECT-P #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'FRAG-OBJECT-P #3='SYSTEM::DEFSTRUCT-READER 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-OBJECT (FRAG) T)) (PROCLAIM '(INLINE FRAG-OBJECT))
  (DEFUN FRAG-OBJECT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'FRAG-OBJECT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-STRING (FRAG) T)) (PROCLAIM '(INLINE FRAG-STRING))
  (DEFUN FRAG-STRING #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'FRAG-STRING #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-FCOLOR (FRAG) T)) (PROCLAIM '(INLINE FRAG-FCOLOR))
  (DEFUN FRAG-FCOLOR #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'FRAG-FCOLOR #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-BCOLOR (FRAG) T)) (PROCLAIM '(INLINE FRAG-BCOLOR))
  (DEFUN FRAG-BCOLOR #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'FRAG-BCOLOR #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-LENGTH (FRAG) T)) (PROCLAIM '(INLINE FRAG-LENGTH))
  (DEFUN FRAG-LENGTH #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 6.)))
  (SYSTEM::%PUT 'FRAG-LENGTH #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-FONT (FRAG) T)) (PROCLAIM '(INLINE FRAG-FONT))
  (DEFUN FRAG-FONT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 7.)))
  (SYSTEM::%PUT 'FRAG-FONT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-WIDTH (FRAG) T)) (PROCLAIM '(INLINE FRAG-WIDTH))
  (DEFUN FRAG-WIDTH #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 8.)))
  (SYSTEM::%PUT 'FRAG-WIDTH #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-ASCENT (FRAG) T)) (PROCLAIM '(INLINE FRAG-ASCENT))
  (DEFUN FRAG-ASCENT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 9.)))
  (SYSTEM::%PUT 'FRAG-ASCENT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-DESCENT (FRAG) T))
  (PROCLAIM '(INLINE FRAG-DESCENT))
  (DEFUN FRAG-DESCENT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 10.)))
  (SYSTEM::%PUT 'FRAG-DESCENT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-LINE-STYLE (FRAG) T))
  (PROCLAIM '(INLINE FRAG-LINE-STYLE))
  (DEFUN FRAG-LINE-STYLE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 11.)))
  (SYSTEM::%PUT 'FRAG-LINE-STYLE #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-START-HIGHLIGHT (FRAG) T))
  (PROCLAIM '(INLINE FRAG-START-HIGHLIGHT))
  (DEFUN FRAG-START-HIGHLIGHT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 12.)))
  (SYSTEM::%PUT 'FRAG-START-HIGHLIGHT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-END-HIGHLIGHT (FRAG) T))
  (PROCLAIM '(INLINE FRAG-END-HIGHLIGHT))
  (DEFUN FRAG-END-HIGHLIGHT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 13.)))
  (SYSTEM::%PUT 'FRAG-END-HIGHLIGHT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-PREV (FRAG) T)) (PROCLAIM '(INLINE FRAG-PREV))
  (DEFUN FRAG-PREV #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 14.)))
  (SYSTEM::%PUT 'FRAG-PREV #3# 'FRAG) (PROCLAIM '(FUNCTION FRAG-NEXT (FRAG) T))
  (PROCLAIM '(INLINE FRAG-NEXT))
  (DEFUN FRAG-NEXT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 15.)))
  (SYSTEM::%PUT 'FRAG-NEXT #3# 'FRAG)
  (PROCLAIM '(FUNCTION FRAG-BREAK-P (FRAG) T))
  (PROCLAIM '(INLINE FRAG-BREAK-P))
  (DEFUN FRAG-BREAK-P #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 16.)))
  (SYSTEM::%PUT 'FRAG-BREAK-P #3# 'FRAG)
  (DEFSETF FRAG-OBJECT-P #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 1. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-OBJECT-P #7='SYSTEM::DEFSTRUCT-WRITER 'FRAG)
  (DEFSETF FRAG-OBJECT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-OBJECT #7# 'FRAG)
  (DEFSETF FRAG-STRING #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-STRING #7# 'FRAG)
  (DEFSETF FRAG-FCOLOR #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-FCOLOR #7# 'FRAG)
  (DEFSETF FRAG-BCOLOR #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-BCOLOR #7# 'FRAG)
  (DEFSETF FRAG-LENGTH #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 6. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-LENGTH #7# 'FRAG)
  (DEFSETF FRAG-FONT #4# #5# (LIST #6# ''FRAG SYSTEM::STRUCT 7. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-FONT #7# 'FRAG)
  (DEFSETF FRAG-WIDTH #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 8. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-WIDTH #7# 'FRAG)
  (DEFSETF FRAG-ASCENT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 9. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-ASCENT #7# 'FRAG)
  (DEFSETF FRAG-DESCENT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 10. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-DESCENT #7# 'FRAG)
  (DEFSETF FRAG-LINE-STYLE #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 11. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-LINE-STYLE #7# 'FRAG)
  (DEFSETF FRAG-START-HIGHLIGHT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 12. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-START-HIGHLIGHT #7# 'FRAG)
  (DEFSETF FRAG-END-HIGHLIGHT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 13. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-END-HIGHLIGHT #7# 'FRAG)
  (DEFSETF FRAG-PREV #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 14. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-PREV #7# 'FRAG)
  (DEFSETF FRAG-NEXT #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 15. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-NEXT #7# 'FRAG)
  (DEFSETF FRAG-BREAK-P #4# #5#
   (LIST #6# ''FRAG SYSTEM::STRUCT 16. SYSTEM::VALUE))
  (SYSTEM::%PUT 'FRAG-BREAK-P #7# 'FRAG)
  (SETF (DOCUMENTATION 'FRAG 'STRUCTURE) NIL)
  (DEFMETHOD PRINT-OBJECT ((SYSTEM::STRUCT FRAG) STREAM)
   (PROGN (PRINT-THE-FRAG SYSTEM::STRUCT STREAM SYSTEM::*PRIN-LEVEL*)))
  'FRAG))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(&KEY OBJECT-P OBJECT STRING FCOLOR BCOLOR LENGTH FONT WIDTH ASCENT DESCENT
     LINE-STYLE START-HIGHLIGHT END-HIGHLIGHT PREV NEXT BREAK-P))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-P)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-P))
    (BLOCK FRAG-P (SYSTEM::%STRUCTURE-TYPE-P 'FRAG SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-FRAG)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-FRAG))
    (BLOCK COPY-FRAG (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-OBJECT-P (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-OBJECT-P)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-OBJECT-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-OBJECT-P))
    (BLOCK FRAG-OBJECT-P
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-OBJECT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-OBJECT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-OBJECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-OBJECT))
    (BLOCK FRAG-OBJECT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-STRING (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-STRING)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-STRING
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-STRING))
    (BLOCK FRAG-STRING
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-FCOLOR (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-FCOLOR)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-FCOLOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-FCOLOR))
    (BLOCK FRAG-FCOLOR
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 4.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-BCOLOR (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-BCOLOR)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-BCOLOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-BCOLOR))
    (BLOCK FRAG-BCOLOR
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 5.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-LENGTH (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-LENGTH)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-LENGTH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-LENGTH))
    (BLOCK FRAG-LENGTH
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 6.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-FONT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-FONT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-FONT))
    (BLOCK FRAG-FONT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 7.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-WIDTH (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-WIDTH)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-WIDTH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-WIDTH))
    (BLOCK FRAG-WIDTH
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 8.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-ASCENT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-ASCENT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-ASCENT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-ASCENT))
    (BLOCK FRAG-ASCENT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 9.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-DESCENT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-DESCENT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-DESCENT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-DESCENT))
    (BLOCK FRAG-DESCENT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 10.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-LINE-STYLE (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-LINE-STYLE)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-LINE-STYLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-LINE-STYLE))
    (BLOCK FRAG-LINE-STYLE
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 11.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-START-HIGHLIGHT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-START-HIGHLIGHT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-START-HIGHLIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-START-HIGHLIGHT))
    (BLOCK FRAG-START-HIGHLIGHT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 12.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-END-HIGHLIGHT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-END-HIGHLIGHT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-END-HIGHLIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-END-HIGHLIGHT))
    (BLOCK FRAG-END-HIGHLIGHT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 13.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-PREV (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-PREV)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-PREV
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-PREV))
    (BLOCK FRAG-PREV
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 14.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-NEXT (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-NEXT)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-NEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-NEXT))
    (BLOCK FRAG-NEXT
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 15.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION FRAG-BREAK-P (FRAG) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE FRAG-BREAK-P)))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-BREAK-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN FRAG-BREAK-P))
    (BLOCK FRAG-BREAK-P
     (THE T (SYSTEM::%STRUCTURE-REF 'FRAG SYSTEM::OBJECT 16.))))))
(PROGN
 (LET NIL (REMPROP 'FRAG-OBJECT-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-OBJECT-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-OBJECT-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-OBJECT-P
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-OBJECT-P 'SETF NIL) 'FRAG-OBJECT-P))
(PROGN
 (LET NIL (REMPROP 'FRAG-OBJECT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-OBJECT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-OBJECT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-OBJECT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-OBJECT 'SETF NIL) 'FRAG-OBJECT))
(PROGN
 (LET NIL (REMPROP 'FRAG-STRING 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-STRING 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-STRING
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-STRING
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-STRING 'SETF NIL) 'FRAG-STRING))
(PROGN
 (LET NIL (REMPROP 'FRAG-FCOLOR 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-FCOLOR 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-FCOLOR
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-FCOLOR
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-FCOLOR 'SETF NIL) 'FRAG-FCOLOR))
(PROGN
 (LET NIL (REMPROP 'FRAG-BCOLOR 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-BCOLOR 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-BCOLOR
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-BCOLOR
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-BCOLOR 'SETF NIL) 'FRAG-BCOLOR))
(PROGN
 (LET NIL (REMPROP 'FRAG-LENGTH 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-LENGTH 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-LENGTH
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-LENGTH
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 6.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-LENGTH 'SETF NIL) 'FRAG-LENGTH))
(PROGN
 (LET NIL (REMPROP 'FRAG-FONT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-FONT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-FONT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-FONT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 7.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-FONT 'SETF NIL) 'FRAG-FONT))
(PROGN
 (LET NIL (REMPROP 'FRAG-WIDTH 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-WIDTH 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-WIDTH
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-WIDTH
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 8.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-WIDTH 'SETF NIL) 'FRAG-WIDTH))
(PROGN
 (LET NIL (REMPROP 'FRAG-ASCENT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-ASCENT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-ASCENT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-ASCENT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 9.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-ASCENT 'SETF NIL) 'FRAG-ASCENT))
(PROGN
 (LET NIL (REMPROP 'FRAG-DESCENT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-DESCENT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-DESCENT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-DESCENT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 10.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-DESCENT 'SETF NIL) 'FRAG-DESCENT))
(PROGN
 (LET NIL (REMPROP 'FRAG-LINE-STYLE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-LINE-STYLE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-LINE-STYLE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-LINE-STYLE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 11.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-LINE-STYLE 'SETF NIL) 'FRAG-LINE-STYLE))
(PROGN
 (LET NIL (REMPROP 'FRAG-START-HIGHLIGHT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-START-HIGHLIGHT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-START-HIGHLIGHT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-START-HIGHLIGHT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 12.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-START-HIGHLIGHT 'SETF NIL)
  'FRAG-START-HIGHLIGHT))
(PROGN
 (LET NIL (REMPROP 'FRAG-END-HIGHLIGHT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-END-HIGHLIGHT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-END-HIGHLIGHT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-END-HIGHLIGHT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 13.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-END-HIGHLIGHT 'SETF NIL)
  'FRAG-END-HIGHLIGHT))
(PROGN
 (LET NIL (REMPROP 'FRAG-PREV 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-PREV 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-PREV
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-PREV
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 14.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-PREV 'SETF NIL) 'FRAG-PREV))
(PROGN
 (LET NIL (REMPROP 'FRAG-NEXT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-NEXT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-NEXT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-NEXT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 15.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-NEXT 'SETF NIL) 'FRAG-NEXT))
(PROGN
 (LET NIL (REMPROP 'FRAG-BREAK-P 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'FRAG-BREAK-P 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-FRAG-BREAK-P
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK FRAG-BREAK-P
        (LIST 'SYSTEM::%STRUCTURE-STORE ''FRAG SYSTEM::STRUCT 16.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'FRAG-BREAK-P 'SETF NIL) 'FRAG-BREAK-P))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-OBJECT
  #S(SYSTEM::SIGNATURE :REQ-NUM 2. :OPT-NUM 0. :REST-P NIL :KEYS-P NIL
     :KEYWORDS NIL :ALLOW-P NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-THE-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG STREAM DEPTH))))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G19251
     (CONS 'MARK
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-MARK (&KEY STICKY-LEFT NAME INFO PREV NEXT FRAG LINE)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 8.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 1.)
      (THE T STICKY-LEFT))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 2.) (THE T NAME))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 3.) (THE T INFO))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 4.) (THE T PREV))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 5.) (THE T NEXT))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 6.) (THE T FRAG))
     (SETF (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 7.) (THE T LINE))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'MARK 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-MARK
     `(#(STICKY-LEFT (:STICKY-LEFT) 1. (NIL) NIL T NIL)
       #(NAME (:NAME) 2. (NIL) NIL T NIL) #(INFO (:INFO) 3. (NIL) NIL T NIL)
       #(PREV (:PREV) 4. (NIL) NIL T NIL) #(NEXT (:NEXT) 5. (NIL) NIL T NIL)
       #(FRAG (:FRAG) 6. (NIL) NIL T NIL)
       #(LINE (:LINE) 7. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'MARK) (PROCLAIM '(INLINE MARK-P))
  (DEFUN MARK-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'MARK SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-MARK))
  (DEFUN COPY-MARK (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION MARK-STICKY-LEFT (MARK) T))
  (PROCLAIM '(INLINE MARK-STICKY-LEFT))
  (DEFUN MARK-STICKY-LEFT #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'MARK-STICKY-LEFT #3='SYSTEM::DEFSTRUCT-READER 'MARK)
  (PROCLAIM '(FUNCTION MARK-NAME (MARK) T)) (PROCLAIM '(INLINE MARK-NAME))
  (DEFUN MARK-NAME #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'MARK-NAME #3# 'MARK) (PROCLAIM '(FUNCTION MARK-INFO (MARK) T))
  (PROCLAIM '(INLINE MARK-INFO))
  (DEFUN MARK-INFO #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'MARK-INFO #3# 'MARK) (PROCLAIM '(FUNCTION MARK-PREV (MARK) T))
  (PROCLAIM '(INLINE MARK-PREV))
  (DEFUN MARK-PREV #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'MARK-PREV #3# 'MARK) (PROCLAIM '(FUNCTION MARK-NEXT (MARK) T))
  (PROCLAIM '(INLINE MARK-NEXT))
  (DEFUN MARK-NEXT #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'MARK-NEXT #3# 'MARK) (PROCLAIM '(FUNCTION MARK-FRAG (MARK) T))
  (PROCLAIM '(INLINE MARK-FRAG))
  (DEFUN MARK-FRAG #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 6.)))
  (SYSTEM::%PUT 'MARK-FRAG #3# 'MARK) (PROCLAIM '(FUNCTION MARK-LINE (MARK) T))
  (PROCLAIM '(INLINE MARK-LINE))
  (DEFUN MARK-LINE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 7.)))
  (SYSTEM::%PUT 'MARK-LINE #3# 'MARK)
  (DEFSETF MARK-STICKY-LEFT #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 1. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-STICKY-LEFT #7='SYSTEM::DEFSTRUCT-WRITER 'MARK)
  (DEFSETF MARK-NAME #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-NAME #7# 'MARK)
  (DEFSETF MARK-INFO #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-INFO #7# 'MARK)
  (DEFSETF MARK-PREV #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-PREV #7# 'MARK)
  (DEFSETF MARK-NEXT #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-NEXT #7# 'MARK)
  (DEFSETF MARK-FRAG #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 6. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-FRAG #7# 'MARK)
  (DEFSETF MARK-LINE #4# #5# (LIST #6# ''MARK SYSTEM::STRUCT 7. SYSTEM::VALUE))
  (SYSTEM::%PUT 'MARK-LINE #7# 'MARK)
  (SETF (DOCUMENTATION 'MARK 'STRUCTURE) NIL)
  (DEFMETHOD PRINT-OBJECT ((SYSTEM::STRUCT MARK) STREAM)
   (PROGN (PRINT-THE-MARK SYSTEM::STRUCT STREAM SYSTEM::*PRIN-LEVEL*)))
  'MARK))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(&KEY STICKY-LEFT NAME INFO PREV NEXT FRAG LINE))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-P)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-P))
    (BLOCK MARK-P (SYSTEM::%STRUCTURE-TYPE-P 'MARK SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-MARK)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-MARK (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-MARK))
    (BLOCK COPY-MARK (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-STICKY-LEFT (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-STICKY-LEFT)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-STICKY-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-STICKY-LEFT))
    (BLOCK MARK-STICKY-LEFT
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-NAME (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-NAME)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-NAME
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-NAME))
    (BLOCK MARK-NAME
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-INFO (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-INFO)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-INFO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-INFO))
    (BLOCK MARK-INFO
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-PREV (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-PREV)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-PREV
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-PREV))
    (BLOCK MARK-PREV
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 4.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-NEXT (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-NEXT)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-NEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-NEXT))
    (BLOCK MARK-NEXT
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 5.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-FRAG (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-FRAG)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-FRAG))
    (BLOCK MARK-FRAG
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 6.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION MARK-LINE (MARK) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE MARK-LINE)))
(PROGN
 (SYSTEM::C-DEFUN 'MARK-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN MARK-LINE))
    (BLOCK MARK-LINE
     (THE T (SYSTEM::%STRUCTURE-REF 'MARK SYSTEM::OBJECT 7.))))))
(PROGN
 (LET NIL (REMPROP 'MARK-STICKY-LEFT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-STICKY-LEFT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-STICKY-LEFT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-STICKY-LEFT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-STICKY-LEFT 'SETF NIL) 'MARK-STICKY-LEFT))
(PROGN
 (LET NIL (REMPROP 'MARK-NAME 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-NAME 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-NAME
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-NAME
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-NAME 'SETF NIL) 'MARK-NAME))
(PROGN
 (LET NIL (REMPROP 'MARK-INFO 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-INFO 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-INFO
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-INFO
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-INFO 'SETF NIL) 'MARK-INFO))
(PROGN
 (LET NIL (REMPROP 'MARK-PREV 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-PREV 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-PREV
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-PREV
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-PREV 'SETF NIL) 'MARK-PREV))
(PROGN
 (LET NIL (REMPROP 'MARK-NEXT 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-NEXT 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-NEXT
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-NEXT
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-NEXT 'SETF NIL) 'MARK-NEXT))
(PROGN
 (LET NIL (REMPROP 'MARK-FRAG 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-FRAG 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-FRAG
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-FRAG
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 6.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-FRAG 'SETF NIL) 'MARK-FRAG))
(PROGN
 (LET NIL (REMPROP 'MARK-LINE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'MARK-LINE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-MARK-LINE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK MARK-LINE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''MARK SYSTEM::STRUCT 7.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'MARK-LINE 'SETF NIL) 'MARK-LINE))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-OBJECT
  #S(SYSTEM::SIGNATURE :REQ-NUM 2. :OPT-NUM 0. :REST-P NIL :KEYS-P NIL
     :KEYWORDS NIL :ALLOW-P NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-THE-MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MARK STREAM DEPTH))))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-TOP* '2.))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-LEFT* '3.))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-HEIGHT* '4.))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-WIDTH* '5.))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-LSTYLE* '6.))
(PROGN (SYSTEM::C-PROCLAIM-CONSTANT '*MULTIFONT-FORCE-UPDATE* '9.))
(PROGN
 (SYSTEM::C-DEFUN 'SET-STYLES-METHOD-MULTIFONT-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(OBJ LINE-STYLE FILLING-STYLE))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-FRR-BBOX-METHOD-MULTIFONT-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(OBJ))))
(PROGN
 (SYSTEM::C-DEFUN 'CHECK-TEXT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN (SYSTEM::C-DEFUN 'NEW-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'NEW-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'FREE-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'FREE-FRAG-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FIRST-FRAG LAST-FRAG))))
(PROGN (SYSTEM::C-DEFUN 'NEW-MARK (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'FREE-MARK (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MARK))))
(PROGN
 (SYSTEM::C-DEFUN 'FREE-MARK-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FIRST-MARK LAST-MARK))))
(PROGN
 (SYSTEM::C-DEFUN 'DESTROY-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'BREAK-AT-NEWLINES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(STR))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-SPACES (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'WIDTH-BREAK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(WIDTH MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-WRAP
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(WIDTH MY-LINE SPEC))))
(PROGN
 (SYSTEM::C-DEFUN 'FONTS-EQUAL-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG1 FRAG2))))
(PROGN
 (SYSTEM::C-DEFUN 'MERGE-FRAGS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE FIRST-FRAG SECOND-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'SPLIT-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LEFT-FRAG CURSOR-SUB-INDEX))))
(PROGN
 (SYSTEM::C-DEFUN 'CALCULATE-SIZE-OF-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'CALCULATE-CURSOR-POS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE MY-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'BREAK-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE MY-POSITION BREAK-P))))
(PROGN
 (SYSTEM::C-DEFUN 'WRAP-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-SPACE-TO-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-SPACES (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'INSTALL-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'WRITE-SLOTS-METHOD-MULTIFONT-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(AGGET NORMAL-PROTO COMPONENTS BEHAVIORS SUPPRESS-CHILDREN?))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-COPY-METHOD-MULTIFONT-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ORIG COPY))))
(PROGN
 (SYSTEM::C-DEFUN 'FIX-UPDATE-SLOTS-METHOD-MULTIFONT-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-METHOD-MULTIFONT-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB &OPTIONAL (FIRST-TIME T)))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MF-TEXT-LSTYLE*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MF-TEXT-DRAW-FUNCTION*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MF-TEXT-FILL-BACKGROUND-P*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *MF-TEXT-FORCE-UPDATE*)))
(PROGN
 (SYSTEM::C-DEFUN 'DRAW-METHOD-MULTIFONT-TEXT-CURSOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB A-WINDOW))))
(PROGN
 (SYSTEM::C-DEFUN 'DRAW-METHOD-MULTIFONT-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB A-WINDOW))))
(PROGN
 (SYSTEM::C-DEFUN 'CALCULATE-CURSOR-X
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE X-OFFSET))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'INVALIDATE-LINE)
 (SYSTEM::%PUTD 'INVALIDATE-LINE
  (SYSTEM::MAKE-MACRO
   (FUNCTION INVALIDATE-LINE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((LINE (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK INVALIDATE-LINE `(S-VALUE ,LINE :FORCE-UPDATE T)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'RESET-FONT)
 (SYSTEM::%PUTD 'RESET-FONT
  (SYSTEM::MAKE-MACRO
   (FUNCTION RESET-FONT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GOB (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK RESET-FONT
        `(LET* ((FRAG (G-VALUE ,GOB :CURSOR-FRAG)) (PREV (FRAG-PREV FRAG)))
          (WHEN (AND PREV (ZEROP (G-VALUE ,GOB :CURSOR-FRAG-POS)))
           (IF (FRAG-OBJECT-P PREV) (SETQ FRAG (FRAG-PREV PREV))
            (SETQ FRAG PREV)))
          (WHEN (NOT (FRAG-OBJECT-P FRAG))
           (S-VALUE ,GOB :CURRENT-FONT (FRAG-FONT FRAG))
           (S-VALUE ,GOB :CURRENT-FCOLOR (FRAG-FCOLOR FRAG))
           (S-VALUE ,GOB :CURRENT-BCOLOR (FRAG-BCOLOR FRAG))))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'HIGHER-CURSOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE1 POS1 LINE2 POS2))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-ON-SEGMENT-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS1 POS2))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-ON-SEGMENT-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-ON-SEGMENT-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-ON-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-ON-SELECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE1 POS1 LINE2 POS2))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-OFF-SEGMENT-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS1 POS2))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-OFF-SEGMENT-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-OFF-SEGMENT-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE POS))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-OFF-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'TURN-OFF-SELECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE1 POS1 LINE2 POS2))))
(PROGN
 (SYSTEM::C-DEFUN 'RESET-SELECTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(CHANGE-LINE CHANGE-POS STABLE-LINE STABLE-POS NEW-LINE NEW-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'MERGE-LINES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FIRST-LINE SECOND-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'UNWRAP-SPACE-CHECK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FIRST-LINE SECOND-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'UNDO-WRAP-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'EXTRACT-KEY-FROM-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FONT))))
(PROGN
 (SYSTEM::C-DEFUN 'UPDATE-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(OLD-FONT MY-FONT FAMILY SIZE ITALIC BOLD FIRST-FACE))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(FRAG MY-FONT FAMILY SIZE ITALIC BOLD FIRST-FACE))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE START-POS END-POS MY-FONT FAMILY SIZE ITALIC BOLD KEY))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE POS MY-FONT FAMILY SIZE ITALIC BOLD KEY))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE POS MY-FONT FAMILY SIZE ITALIC BOLD KEY))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE MY-FONT FAMILY SIZE ITALIC BOLD KEY))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB START-LINE START-POS END-LINE END-POS MY-FONT FAMILY SIZE ITALIC BOLD
     FIRST-FACE))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-FRAG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE START-POS END-POS FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE POS FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-LINE POS FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB START-LINE START-POS END-LINE END-POS FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-CURSOR-VISIBLE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB VIS))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-CURSOR-TO-X-Y-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB X Y))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-CURSOR-TO-LINE-CHAR-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE CHAR))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-CURSOR-LINE-CHAR-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-NEXT-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-PREV-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'DELIM-CHAR-P)
 (SYSTEM::%PUTD 'DELIM-CHAR-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION DELIM-CHAR-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((CHAR (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK DELIM-CHAR-P `(MEMBER ,CHAR *DELIM-CHARS* :TEST #'EQ)))))))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-NEXT-WORD (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-PREV-WORD (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-NEXT-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-PREV-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-BEGINNING-OF-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-END-OF-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-BEGINNING-OF-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GO-TO-END-OF-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'FETCH-NEXT-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'FETCH-PREV-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'TOGGLE-SELECTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-SELECTION-TO-X-Y-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB X Y))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-SELECTION-TO-LINE-CHAR-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE CHAR))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-SELECTION-LINE-CHAR-POSITION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-FOR-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-LINE START-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-BACKWARDS-FOR-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-LINE START-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-FONT-OF-SELECTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB MY-FONT &KEY FAMILY SIZE (ITALIC :NOT-SUPPLIED)
     (BOLD :NOT-SUPPLIED)))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-FOR-COLOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-LINE START-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-BACKWARDS-FOR-COLOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-LINE START-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'CHANGE-COLOR-OF-SELECTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FCOLOR &OPTIONAL BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-NEWLINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'RESET-ASCENT-DESCENT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'NEW-FRAG-WITH-FONT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(MY-FONT FCOLOR BCOLOR MY-LINE PREV-FRAG NEXT-FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'CREATE-FRAG-OPENNING
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(MY-LINE FRAG FRAG-POSITION MY-FONT FCOLOR BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-OBJECT-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-CHAR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB CHAR &OPTIONAL NEW-FONT NEW-FCOLOR NEW-BCOLOR LISP-MODE-P))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-OBJECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB OBJECT))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-PREV-CHAR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'INSERT-STRING
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB STR &OPTIONAL NEW-FONT NEW-FCOLOR NEW-BCOLOR))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-OBJECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB OBJECT))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-FOR-MARK-FROM
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE FRAG &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-FOR-MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-BACKWARDS-FOR-MARK-FROM
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE FRAG &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'SEARCH-BACKWARDS-FOR-MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'BETWEEN-MARKS-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&KEY STICKY-LEFT NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'INSERT-MARK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB STICKY-LEFT &KEY NAME INFO))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-MARK (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MARK))))
(PROGN
 (SYSTEM::C-DEFUN 'INSERT-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'INSERT-TEXT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-SUBSTRING
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB START-LINE START-CHAR END-LINE END-CHAR))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-WORD (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-PREV-WORD (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-FRAG-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG START-POS END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-FRAG-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FRAG START-POS END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-FRAG-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-FRAG-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-FRAG-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-FRAG-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-THE-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-LINE-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(START-FRAG START-POS END-FRAG END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-LINE-MID
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB LINE START-FRAG START-POS END-FRAG END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-LINE-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-LINE-LEFT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB LINE FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-LINE-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE FRAG FRAG-POSITION))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-LINE-RIGHT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB LINE FRAG FRAG-POSITION))))
(PROGN (SYSTEM::C-DEFUN 'COPY-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'KILL-REST-OF-LINE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(START-LINE START-FRAG START-POS END-LINE END-FRAG END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GOB START-LINE START-FRAG START-POS END-LINE END-FRAG END-POS))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-SELECTED-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'DELETE-SELECTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB &OPTIONAL LISP-MODE-P))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-TEXT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB TEXT))))
(PROGN (SYSTEM::C-DEFUN 'GET-STRING (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN (SYSTEM::C-DEFUN 'GET-TEXT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-OBJECTS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'NOTICE-RESIZE-OBJECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(OBJECT))))
(PROGN
 (SYSTEM::C-DEFUN 'FONT-TO-LIST (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-FONT))))
(PROGN
 (SYSTEM::C-DEFUN 'LIST-TO-FONT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-FONT))))
(PROGN
 (SYSTEM::C-DEFUN 'FRAG-TO-LIST (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'LIST-TO-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'LINE-TO-LIST (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'LIST-TO-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'TEXT-TO-PURE-LIST
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'PURE-LIST-TO-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PURE-LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'TEXT-TO-STRING (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'LISTIFY-FRAG (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'LISTIFY-LINE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(MY-LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'LISTIFY-TEXT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'CONCAT-LISTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT1 TEXT2))))
(PROGN
 (SYSTEM::C-DEFUN 'CONCATENATE-TEXT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT1 TEXT2))))
(PROGN
 (SYSTEM::C-DEFUN 'EMPTY-FRAG-P (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FRAG))))
(PROGN
 (SYSTEM::C-DEFUN 'EMPTY-LINE-P (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LINE))))
(PROGN
 (SYSTEM::C-DEFUN 'EMPTY-TEXT-P (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(TEXT))))
(PROGN
 (SYSTEM::C-DEFUN 'RESET-ALL-SIZES (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'RESET-MULTIFONT-SIZES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))