#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "INTERACTORS")))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G79344
     (CONS 'G-CLASS
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-G-CLASS (&KEY NAME AVERAGE SUMCOV NUM-EXAMPLES)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 5.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 1.) (THE T NAME))
     (SETF (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 2.) (THE T AVERAGE))
     (SETF (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 3.) (THE T SUMCOV))
     (SETF (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 4.)
      (THE T NUM-EXAMPLES))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'G-CLASS 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-G-CLASS
     `(#(NAME (:NAME) 1. (NIL) NIL T NIL)
       #(AVERAGE (:AVERAGE) 2. (NIL) NIL T NIL)
       #(SUMCOV (:SUMCOV) 3. (NIL) NIL T NIL)
       #(NUM-EXAMPLES (:NUM-EXAMPLES) 4. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'G-CLASS) (PROCLAIM '(INLINE G-CLASS-P))
  (DEFUN G-CLASS-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'G-CLASS SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-G-CLASS))
  (DEFUN COPY-G-CLASS (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION G-CLASS-NAME (G-CLASS) T))
  (PROCLAIM '(INLINE G-CLASS-NAME))
  (DEFUN G-CLASS-NAME #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'G-CLASS-NAME #3='SYSTEM::DEFSTRUCT-READER 'G-CLASS)
  (PROCLAIM '(FUNCTION G-CLASS-AVERAGE (G-CLASS) T))
  (PROCLAIM '(INLINE G-CLASS-AVERAGE))
  (DEFUN G-CLASS-AVERAGE #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'G-CLASS-AVERAGE #3# 'G-CLASS)
  (PROCLAIM '(FUNCTION G-CLASS-SUMCOV (G-CLASS) T))
  (PROCLAIM '(INLINE G-CLASS-SUMCOV))
  (DEFUN G-CLASS-SUMCOV #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'G-CLASS-SUMCOV #3# 'G-CLASS)
  (PROCLAIM '(FUNCTION G-CLASS-NUM-EXAMPLES (G-CLASS) T))
  (PROCLAIM '(INLINE G-CLASS-NUM-EXAMPLES))
  (DEFUN G-CLASS-NUM-EXAMPLES #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'G-CLASS-NUM-EXAMPLES #3# 'G-CLASS)
  (DEFSETF G-CLASS-NAME #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''G-CLASS SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'G-CLASS-NAME #7='SYSTEM::DEFSTRUCT-WRITER 'G-CLASS)
  (DEFSETF G-CLASS-AVERAGE #4# #5#
   (LIST #6# ''G-CLASS SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'G-CLASS-AVERAGE #7# 'G-CLASS)
  (DEFSETF G-CLASS-SUMCOV #4# #5#
   (LIST #6# ''G-CLASS SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'G-CLASS-SUMCOV #7# 'G-CLASS)
  (DEFSETF G-CLASS-NUM-EXAMPLES #4# #5#
   (LIST #6# ''G-CLASS SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'G-CLASS-NUM-EXAMPLES #7# 'G-CLASS)
  (SETF (DOCUMENTATION 'G-CLASS 'STRUCTURE) NIL)
  (CLOS::DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD 'G-CLASS) 'G-CLASS))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-G-CLASS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&KEY NAME AVERAGE SUMCOV NUM-EXAMPLES))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE G-CLASS-P)))
(PROGN
 (SYSTEM::C-DEFUN 'G-CLASS-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN G-CLASS-P))
    (BLOCK G-CLASS-P (SYSTEM::%STRUCTURE-TYPE-P 'G-CLASS SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-G-CLASS)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-G-CLASS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-G-CLASS))
    (BLOCK COPY-G-CLASS (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION G-CLASS-NAME (G-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE G-CLASS-NAME)))
(PROGN
 (SYSTEM::C-DEFUN 'G-CLASS-NAME
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN G-CLASS-NAME))
    (BLOCK G-CLASS-NAME
     (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION G-CLASS-AVERAGE (G-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE G-CLASS-AVERAGE)))
(PROGN
 (SYSTEM::C-DEFUN 'G-CLASS-AVERAGE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN G-CLASS-AVERAGE))
    (BLOCK G-CLASS-AVERAGE
     (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION G-CLASS-SUMCOV (G-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE G-CLASS-SUMCOV)))
(PROGN
 (SYSTEM::C-DEFUN 'G-CLASS-SUMCOV
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN G-CLASS-SUMCOV))
    (BLOCK G-CLASS-SUMCOV
     (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION G-CLASS-NUM-EXAMPLES (G-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE G-CLASS-NUM-EXAMPLES)))
(PROGN
 (SYSTEM::C-DEFUN 'G-CLASS-NUM-EXAMPLES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN G-CLASS-NUM-EXAMPLES))
    (BLOCK G-CLASS-NUM-EXAMPLES
     (THE T (SYSTEM::%STRUCTURE-REF 'G-CLASS SYSTEM::OBJECT 4.))))))
(PROGN
 (LET NIL (REMPROP 'G-CLASS-NAME 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'G-CLASS-NAME 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-G-CLASS-NAME
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK G-CLASS-NAME
        (LIST 'SYSTEM::%STRUCTURE-STORE ''G-CLASS SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'G-CLASS-NAME 'SETF NIL) 'G-CLASS-NAME))
(PROGN
 (LET NIL (REMPROP 'G-CLASS-AVERAGE 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'G-CLASS-AVERAGE 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-G-CLASS-AVERAGE
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK G-CLASS-AVERAGE
        (LIST 'SYSTEM::%STRUCTURE-STORE ''G-CLASS SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'G-CLASS-AVERAGE 'SETF NIL) 'G-CLASS-AVERAGE))
(PROGN
 (LET NIL (REMPROP 'G-CLASS-SUMCOV 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'G-CLASS-SUMCOV 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-G-CLASS-SUMCOV
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK G-CLASS-SUMCOV
        (LIST 'SYSTEM::%STRUCTURE-STORE ''G-CLASS SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'G-CLASS-SUMCOV 'SETF NIL) 'G-CLASS-SUMCOV))
(PROGN
 (LET NIL (REMPROP 'G-CLASS-NUM-EXAMPLES 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'G-CLASS-NUM-EXAMPLES 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-G-CLASS-NUM-EXAMPLES
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK G-CLASS-NUM-EXAMPLES
        (LIST 'SYSTEM::%STRUCTURE-STORE ''G-CLASS SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'G-CLASS-NUM-EXAMPLES 'SETF NIL)
  'G-CLASS-NUM-EXAMPLES))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G79401
     (CONS 'GEST-CLASS
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-GEST-CLASS (&KEY NAME EXAMPLES)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 3.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 1.) (THE T NAME))
     (SETF (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 2.)
      (THE T EXAMPLES))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'GEST-CLASS 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-GEST-CLASS
     `(#(NAME (:NAME) 1. (NIL) NIL T NIL)
       #(EXAMPLES (:EXAMPLES) 2. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'GEST-CLASS) (PROCLAIM '(INLINE GEST-CLASS-P))
  (DEFUN GEST-CLASS-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'GEST-CLASS SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-GEST-CLASS))
  (DEFUN COPY-GEST-CLASS (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION GEST-CLASS-NAME (GEST-CLASS) T))
  (PROCLAIM '(INLINE GEST-CLASS-NAME))
  (DEFUN GEST-CLASS-NAME #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'GEST-CLASS-NAME #3='SYSTEM::DEFSTRUCT-READER 'GEST-CLASS)
  (PROCLAIM '(FUNCTION GEST-CLASS-EXAMPLES (GEST-CLASS) T))
  (PROCLAIM '(INLINE GEST-CLASS-EXAMPLES))
  (DEFUN GEST-CLASS-EXAMPLES #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'GEST-CLASS-EXAMPLES #3# 'GEST-CLASS)
  (DEFSETF GEST-CLASS-NAME #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''GEST-CLASS SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'GEST-CLASS-NAME #7='SYSTEM::DEFSTRUCT-WRITER 'GEST-CLASS)
  (DEFSETF GEST-CLASS-EXAMPLES #4# #5#
   (LIST #6# ''GEST-CLASS SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'GEST-CLASS-EXAMPLES #7# 'GEST-CLASS)
  (SETF (DOCUMENTATION 'GEST-CLASS 'STRUCTURE) NIL)
  (CLOS::DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD 'GEST-CLASS) 'GEST-CLASS))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-GEST-CLASS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&KEY NAME EXAMPLES))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE GEST-CLASS-P)))
(PROGN
 (SYSTEM::C-DEFUN 'GEST-CLASS-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN GEST-CLASS-P))
    (BLOCK GEST-CLASS-P
     (SYSTEM::%STRUCTURE-TYPE-P 'GEST-CLASS SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-GEST-CLASS)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-GEST-CLASS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-GEST-CLASS))
    (BLOCK COPY-GEST-CLASS (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION GEST-CLASS-NAME (GEST-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE GEST-CLASS-NAME)))
(PROGN
 (SYSTEM::C-DEFUN 'GEST-CLASS-NAME
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN GEST-CLASS-NAME))
    (BLOCK GEST-CLASS-NAME
     (THE T (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION GEST-CLASS-EXAMPLES (GEST-CLASS) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE GEST-CLASS-EXAMPLES)))
(PROGN
 (SYSTEM::C-DEFUN 'GEST-CLASS-EXAMPLES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN GEST-CLASS-EXAMPLES))
    (BLOCK GEST-CLASS-EXAMPLES
     (THE T (SYSTEM::%STRUCTURE-REF 'GEST-CLASS SYSTEM::OBJECT 2.))))))
(PROGN
 (LET NIL (REMPROP 'GEST-CLASS-NAME 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'GEST-CLASS-NAME 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-GEST-CLASS-NAME
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK GEST-CLASS-NAME
        (LIST 'SYSTEM::%STRUCTURE-STORE ''GEST-CLASS SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'GEST-CLASS-NAME 'SETF NIL) 'GEST-CLASS-NAME))
(PROGN
 (LET NIL (REMPROP 'GEST-CLASS-EXAMPLES 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'GEST-CLASS-EXAMPLES 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-GEST-CLASS-EXAMPLES
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK GEST-CLASS-EXAMPLES
        (LIST 'SYSTEM::%STRUCTURE-STORE ''GEST-CLASS SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'GEST-CLASS-EXAMPLES 'SETF NIL)
  'GEST-CLASS-EXAMPLES))
(PROGN
 (LET NIL
  (LET
   ((#1=#:G79436
     (CONS 'CLASSIFIER
      (SVREF (GET 'STRUCTURE-OBJECT 'SYSTEM::DEFSTRUCT-DESCRIPTION) 0.))))
   (DEFUN MAKE-CLASSIFIER (&KEY CLASSES NUM-CLASSES CNST WEIGHTS INVAVGCOV)
    (LET ((SYSTEM::OBJECT (SYSTEM::%MAKE-STRUCTURE #1# 6.)))
     (SETF (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 1.)
      (THE T CLASSES))
     (SETF (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 2.)
      (THE T NUM-CLASSES))
     (SETF (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 3.) (THE T CNST))
     (SETF (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 4.)
      (THE T WEIGHTS))
     (SETF (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 5.)
      (THE T INVAVGCOV))
     SYSTEM::OBJECT))
   (SYSTEM::%PUT 'CLASSIFIER 'SYSTEM::DEFSTRUCT-DESCRIPTION
    (VECTOR #1# 'T 'MAKE-CLASSIFIER
     `(#(CLASSES (:CLASSES) 1. (NIL) NIL T NIL)
       #(NUM-CLASSES (:NUM-CLASSES) 2. (NIL) NIL T NIL)
       #(CNST (:CNST) 3. (NIL) NIL T NIL)
       #(WEIGHTS (:WEIGHTS) 4. (NIL) NIL T NIL)
       #(INVAVGCOV (:INVAVGCOV) 5. (NIL) NIL T NIL)))))
  (CLOS::DEFINE-STRUCTURE-CLASS 'CLASSIFIER) (PROCLAIM '(INLINE CLASSIFIER-P))
  (DEFUN CLASSIFIER-P (SYSTEM::OBJECT)
   (SYSTEM::%STRUCTURE-TYPE-P 'CLASSIFIER SYSTEM::OBJECT))
  (PROCLAIM '(INLINE COPY-CLASSIFIER))
  (DEFUN COPY-CLASSIFIER (STRUCTURE) (COPY-STRUCTURE STRUCTURE))
  (PROCLAIM '(FUNCTION CLASSIFIER-CLASSES (CLASSIFIER) T))
  (PROCLAIM '(INLINE CLASSIFIER-CLASSES))
  (DEFUN CLASSIFIER-CLASSES #2=(SYSTEM::OBJECT)
   (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 1.)))
  (SYSTEM::%PUT 'CLASSIFIER-CLASSES #3='SYSTEM::DEFSTRUCT-READER 'CLASSIFIER)
  (PROCLAIM '(FUNCTION CLASSIFIER-NUM-CLASSES (CLASSIFIER) T))
  (PROCLAIM '(INLINE CLASSIFIER-NUM-CLASSES))
  (DEFUN CLASSIFIER-NUM-CLASSES #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 2.)))
  (SYSTEM::%PUT 'CLASSIFIER-NUM-CLASSES #3# 'CLASSIFIER)
  (PROCLAIM '(FUNCTION CLASSIFIER-CNST (CLASSIFIER) T))
  (PROCLAIM '(INLINE CLASSIFIER-CNST))
  (DEFUN CLASSIFIER-CNST #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 3.)))
  (SYSTEM::%PUT 'CLASSIFIER-CNST #3# 'CLASSIFIER)
  (PROCLAIM '(FUNCTION CLASSIFIER-WEIGHTS (CLASSIFIER) T))
  (PROCLAIM '(INLINE CLASSIFIER-WEIGHTS))
  (DEFUN CLASSIFIER-WEIGHTS #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 4.)))
  (SYSTEM::%PUT 'CLASSIFIER-WEIGHTS #3# 'CLASSIFIER)
  (PROCLAIM '(FUNCTION CLASSIFIER-INVAVGCOV (CLASSIFIER) T))
  (PROCLAIM '(INLINE CLASSIFIER-INVAVGCOV))
  (DEFUN CLASSIFIER-INVAVGCOV #2#
   (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 5.)))
  (SYSTEM::%PUT 'CLASSIFIER-INVAVGCOV #3# 'CLASSIFIER)
  (DEFSETF CLASSIFIER-CLASSES #4=(SYSTEM::STRUCT) #5=(SYSTEM::VALUE)
   (LIST #6='SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 1.
    SYSTEM::VALUE))
  (SYSTEM::%PUT 'CLASSIFIER-CLASSES #7='SYSTEM::DEFSTRUCT-WRITER 'CLASSIFIER)
  (DEFSETF CLASSIFIER-NUM-CLASSES #4# #5#
   (LIST #6# ''CLASSIFIER SYSTEM::STRUCT 2. SYSTEM::VALUE))
  (SYSTEM::%PUT 'CLASSIFIER-NUM-CLASSES #7# 'CLASSIFIER)
  (DEFSETF CLASSIFIER-CNST #4# #5#
   (LIST #6# ''CLASSIFIER SYSTEM::STRUCT 3. SYSTEM::VALUE))
  (SYSTEM::%PUT 'CLASSIFIER-CNST #7# 'CLASSIFIER)
  (DEFSETF CLASSIFIER-WEIGHTS #4# #5#
   (LIST #6# ''CLASSIFIER SYSTEM::STRUCT 4. SYSTEM::VALUE))
  (SYSTEM::%PUT 'CLASSIFIER-WEIGHTS #7# 'CLASSIFIER)
  (DEFSETF CLASSIFIER-INVAVGCOV #4# #5#
   (LIST #6# ''CLASSIFIER SYSTEM::STRUCT 5. SYSTEM::VALUE))
  (SYSTEM::%PUT 'CLASSIFIER-INVAVGCOV #7# 'CLASSIFIER)
  (SETF (DOCUMENTATION 'CLASSIFIER 'STRUCTURE) NIL)
  (CLOS::DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD 'CLASSIFIER) 'CLASSIFIER))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-CLASSIFIER
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(&KEY CLASSES NUM-CLASSES CNST WEIGHTS INVAVGCOV))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-P)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-P
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-P))
    (BLOCK CLASSIFIER-P
     (SYSTEM::%STRUCTURE-TYPE-P 'CLASSIFIER SYSTEM::OBJECT)))))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE COPY-CLASSIFIER)))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-CLASSIFIER
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(STRUCTURE))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN COPY-CLASSIFIER))
    (BLOCK COPY-CLASSIFIER (COPY-STRUCTURE STRUCTURE)))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION CLASSIFIER-CLASSES (CLASSIFIER) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-CLASSES)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-CLASSES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-CLASSES))
    (BLOCK CLASSIFIER-CLASSES
     (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 1.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION CLASSIFIER-NUM-CLASSES (CLASSIFIER) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-NUM-CLASSES)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-NUM-CLASSES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-NUM-CLASSES))
    (BLOCK CLASSIFIER-NUM-CLASSES
     (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 2.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION CLASSIFIER-CNST (CLASSIFIER) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-CNST)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-CNST
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-CNST))
    (BLOCK CLASSIFIER-CNST
     (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 3.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION CLASSIFIER-WEIGHTS (CLASSIFIER) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-WEIGHTS)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-WEIGHTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-WEIGHTS))
    (BLOCK CLASSIFIER-WEIGHTS
     (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 4.))))))
(PROGN (SYSTEM::C-PROCLAIM '(FUNCTION CLASSIFIER-INVAVGCOV (CLASSIFIER) T)))
(PROGN (SYSTEM::C-PROCLAIM '(INLINE CLASSIFIER-INVAVGCOV)))
(PROGN
 (SYSTEM::C-DEFUN 'CLASSIFIER-INVAVGCOV
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '#1=(SYSTEM::OBJECT))
  '(#1# (DECLARE (SYSTEM::IN-DEFUN CLASSIFIER-INVAVGCOV))
    (BLOCK CLASSIFIER-INVAVGCOV
     (THE T (SYSTEM::%STRUCTURE-REF 'CLASSIFIER SYSTEM::OBJECT 5.))))))
(PROGN
 (LET NIL (REMPROP 'CLASSIFIER-CLASSES 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'CLASSIFIER-CLASSES 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-CLASSIFIER-CLASSES
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK CLASSIFIER-CLASSES
        (LIST 'SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 1.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'CLASSIFIER-CLASSES 'SETF NIL)
  'CLASSIFIER-CLASSES))
(PROGN
 (LET NIL (REMPROP 'CLASSIFIER-NUM-CLASSES 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'CLASSIFIER-NUM-CLASSES 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-CLASSIFIER-NUM-CLASSES
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK CLASSIFIER-NUM-CLASSES
        (LIST 'SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 2.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'CLASSIFIER-NUM-CLASSES 'SETF NIL)
  'CLASSIFIER-NUM-CLASSES))
(PROGN
 (LET NIL (REMPROP 'CLASSIFIER-CNST 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'CLASSIFIER-CNST 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-CLASSIFIER-CNST
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK CLASSIFIER-CNST
        (LIST 'SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 3.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'CLASSIFIER-CNST 'SETF NIL) 'CLASSIFIER-CNST))
(PROGN
 (LET NIL (REMPROP 'CLASSIFIER-WEIGHTS 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'CLASSIFIER-WEIGHTS 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-CLASSIFIER-WEIGHTS
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK CLASSIFIER-WEIGHTS
        (LIST 'SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 4.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'CLASSIFIER-WEIGHTS 'SETF NIL)
  'CLASSIFIER-WEIGHTS))
(PROGN
 (LET NIL (REMPROP 'CLASSIFIER-INVAVGCOV 'SYSTEM::DEFSTRUCT-WRITER)
  (SYSTEM::%PUT 'CLASSIFIER-INVAVGCOV 'SYSTEM::SETF-EXPANDER
   (LIST* -1. 1.
    (FUNCTION SETF-CLASSIFIER-INVAVGCOV
     (LAMBDA (SYSTEM::%ACCESS-ARGLIST SYSTEM::VALUE)
      (LET* ((SYSTEM::STRUCT (CADR SYSTEM::%ACCESS-ARGLIST)))
       (BLOCK CLASSIFIER-INVAVGCOV
        (LIST 'SYSTEM::%STRUCTURE-STORE ''CLASSIFIER SYSTEM::STRUCT 5.
         SYSTEM::VALUE)))))))
  (SYSTEM::%SET-DOCUMENTATION 'CLASSIFIER-INVAVGCOV 'SETF NIL)
  'CLASSIFIER-INVAVGCOV))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL LAST-CLASS)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL LAST-CLASSIFIER)))
(PROGN
 (SYSTEM::C-DEFUN 'GEST-CLASSIFY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(G-POINTS CLASSIFIER &OPTIONAL MIN-NON-AMBIG-PROB MAX-DIST))))
(PROGN
 (SYSTEM::C-DEFUN 'MDISTANCE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(V U SIGMA))))
(PROGN
 (SYSTEM::C-DEFUN 'GEST-NEW-CLASSIFIER
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))