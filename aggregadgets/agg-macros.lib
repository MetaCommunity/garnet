#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN
 (EXPORT
  '(ADD-LOCAL-COMPONENT ADD-LOCAL-INTERACTOR REMOVE-LOCAL-COMPONENT
    REMOVE-LOCAL-INTERACTOR ADD-LOCAL-ITEM REMOVE-LOCAL-ITEM REMOVE-NTH-ITEM
    REMOVE-NTH-COMPONENT NOTICE-ITEMS-CHANGED ADD-INTERACTOR REMOVE-INTERACTOR
    TAKE-DEFAULT-COMPONENT REPLACE-ITEM-PROTOTYPE-OBJECT)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'ADD-LOCAL-COMPONENT)
 (SYSTEM::%PUTD 'ADD-LOCAL-COMPONENT
  (SYSTEM::MAKE-MACRO
   (FUNCTION ADD-LOCAL-COMPONENT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK ADD-LOCAL-COMPONENT
        `(KR-SEND ,SCHEMA :ADD-LOCAL-COMPONENT ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'ADD-LOCAL-INTERACTOR)
 (SYSTEM::%PUTD 'ADD-LOCAL-INTERACTOR
  (SYSTEM::MAKE-MACRO
   (FUNCTION ADD-LOCAL-INTERACTOR
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK ADD-LOCAL-INTERACTOR
        `(KR-SEND ,SCHEMA :ADD-LOCAL-INTERACTOR ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-LOCAL-COMPONENT)
 (SYSTEM::%PUTD 'REMOVE-LOCAL-COMPONENT
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-LOCAL-COMPONENT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK REMOVE-LOCAL-COMPONENT
        `(KR-SEND ,SCHEMA :REMOVE-LOCAL-COMPONENT ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-LOCAL-INTERACTOR)
 (SYSTEM::%PUTD 'REMOVE-LOCAL-INTERACTOR
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-LOCAL-INTERACTOR
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK REMOVE-LOCAL-INTERACTOR
        `(KR-SEND ,SCHEMA :REMOVE-LOCAL-INTERACTOR ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'ADD-LOCAL-ITEM)
 (SYSTEM::%PUTD 'ADD-LOCAL-ITEM
  (SYSTEM::MAKE-MACRO
   (FUNCTION ADD-LOCAL-ITEM
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK ADD-LOCAL-ITEM
        `(KR-SEND ,SCHEMA :ADD-LOCAL-ITEM ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-LOCAL-ITEM)
 (SYSTEM::%PUTD 'REMOVE-LOCAL-ITEM
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-LOCAL-ITEM
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK REMOVE-LOCAL-ITEM
        `(KR-SEND ,SCHEMA :REMOVE-LOCAL-ITEM ,SCHEMA ,@ARGS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-NTH-ITEM)
 (SYSTEM::%PUTD 'REMOVE-NTH-ITEM
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-NTH-ITEM
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (N (CADDR . #1#)))
       (BLOCK REMOVE-NTH-ITEM
        `(KR-SEND ,SCHEMA :REMOVE-NTH-ITEM ,SCHEMA ,N)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-NTH-COMPONENT)
 (SYSTEM::%PUTD 'REMOVE-NTH-COMPONENT
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-NTH-COMPONENT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (N (CADDR . #1#)))
       (BLOCK REMOVE-NTH-COMPONENT
        `(KR-SEND ,SCHEMA :REMOVE-NTH-COMPONENT ,SCHEMA ,N)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'NOTICE-ITEMS-CHANGED)
 (SYSTEM::%PUTD 'NOTICE-ITEMS-CHANGED
  (SYSTEM::MAKE-MACRO
   (FUNCTION NOTICE-ITEMS-CHANGED
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (NOT (<= 2. (LENGTH SYSTEM::<MACRO-FORM>) 3.))
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((AGG (CADR . #1=(SYSTEM::<MACRO-FORM>)))
        (NO-PROPAGATION (CADDR . #1#)))
       (BLOCK NOTICE-ITEMS-CHANGED
        `(KR-SEND ,AGG :NOTICE-ITEMS-CHANGED ,AGG ,NO-PROPAGATION)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'ADD-INTERACTOR)
 (SYSTEM::%PUTD 'ADD-INTERACTOR
  (SYSTEM::MAKE-MACRO
   (FUNCTION ADD-INTERACTOR
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK ADD-INTERACTOR
        `(LET ((THE-SCHEMA ,SCHEMA))
          (KR-SEND THE-SCHEMA :ADD-INTERACTOR THE-SCHEMA ,@ARGS))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-INTERACTOR)
 (SYSTEM::%PUTD 'REMOVE-INTERACTOR
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-INTERACTOR
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK REMOVE-INTERACTOR
        `(LET ((THE-SCHEMA ,SCHEMA))
          (KR-SEND THE-SCHEMA :REMOVE-INTERACTOR THE-SCHEMA ,@ARGS))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'TAKE-DEFAULT-COMPONENT)
 (SYSTEM::%PUTD 'TAKE-DEFAULT-COMPONENT
  (SYSTEM::MAKE-MACRO
   (FUNCTION TAKE-DEFAULT-COMPONENT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK TAKE-DEFAULT-COMPONENT
        `(LET ((THE-SCHEMA ,SCHEMA))
          (KR-SEND THE-SCHEMA :TAKE-DEFAULT-COMPONENT THE-SCHEMA
           ,@ARGS))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REPLACE-ITEM-PROTOTYPE-OBJECT)
 (SYSTEM::%PUTD 'REPLACE-ITEM-PROTOTYPE-OBJECT
  (SYSTEM::MAKE-MACRO
   (FUNCTION REPLACE-ITEM-PROTOTYPE-OBJECT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ARGS (CDDR . #1#)))
       (BLOCK REPLACE-ITEM-PROTOTYPE-OBJECT
        `(LET ((THE-SCHEMA ,SCHEMA))
          (KR-SEND THE-SCHEMA :REPLACE-ITEM-PROTOTYPE-OBJECT THE-SCHEMA
           ,@ARGS))))))))))