#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN
 (EXPORT
  '(AGGREGRAPH AGGREGRAPH-NODE-PROTOTYPE AGGREGRAPH-LINK-PROTOTYPE
    LAYOUT-TREE))
 (EXPORT '(SOURCE-TO-GRAPH-NODE REMOVE-ROOT MAKE-ROOT ADD-NODE LAYOUT-GRAPH)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'SOURCE-TO-GRAPH-NODE)
 (SYSTEM::%PUTD 'SOURCE-TO-GRAPH-NODE
  (SYSTEM::MAKE-MACRO
   (FUNCTION SOURCE-TO-GRAPH-NODE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GRAPH (CADR . #1=(SYSTEM::<MACRO-FORM>))) (SOURCE (CADDR . #1#)))
       (BLOCK SOURCE-TO-GRAPH-NODE
        `(LET ((THE-GRAPH ,GRAPH))
          (KR-SEND THE-GRAPH :SOURCE-TO-GRAPH-NODE THE-GRAPH ,SOURCE))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'REMOVE-ROOT)
 (SYSTEM::%PUTD 'REMOVE-ROOT
  (SYSTEM::MAKE-MACRO
   (FUNCTION REMOVE-ROOT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GRAPH (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ROOT (CADDR . #1#)))
       (BLOCK REMOVE-ROOT
        `(LET ((THE-GRAPH ,GRAPH))
          (KR-SEND THE-GRAPH :REMOVE-ROOT THE-GRAPH ,ROOT))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'MAKE-ROOT)
 (SYSTEM::%PUTD 'MAKE-ROOT
  (SYSTEM::MAKE-MACRO
   (FUNCTION MAKE-ROOT
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GRAPH (CADR . #1=(SYSTEM::<MACRO-FORM>))) (ROOT (CADDR . #1#)))
       (BLOCK MAKE-ROOT
        `(LET ((THE-GRAPH ,GRAPH))
          (KR-SEND THE-GRAPH :MAKE-ROOT THE-GRAPH ,ROOT))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'ADD-NODE)
 (SYSTEM::%PUTD 'ADD-NODE
  (SYSTEM::MAKE-MACRO
   (FUNCTION ADD-NODE
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 5.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((GRAPH (CADR . #1=(SYSTEM::<MACRO-FORM>))) (NODE (CADDR . #1#))
        (PARENTS (CADDDR . #1#)) (CHILDREN (FIFTH . #1#)))
       (BLOCK ADD-NODE
        `(LET ((THE-GRAPH ,GRAPH))
          (KR-SEND THE-GRAPH :ADD-NODE THE-GRAPH ,NODE ,PARENTS
           ,CHILDREN))))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'LAYOUT-GRAPH)
 (SYSTEM::%PUTD 'LAYOUT-GRAPH
  (SYSTEM::MAKE-MACRO
   (FUNCTION LAYOUT-GRAPH
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((GRAPH (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK LAYOUT-GRAPH
        `(LET ((THE-GRAPH ,GRAPH))
          (KR-SEND THE-GRAPH :LAYOUT-GRAPH THE-GRAPH))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'TOP-SORT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GRAPH ROOTS))))
(PROGN
 (SYSTEM::C-DEFUN 'LAYOUT-TREE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GRAPH))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-METHOD-AGGREGRAPH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SELF))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-GRAPH-NODE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SOURCE-NODE GRAPH))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-GRAPH-LINK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FROM TO GRAPH))))
(PROGN
 (SYSTEM::C-DEFUN 'CREATE-NODES-AND-LINKS-FROM-ROOT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ROOT GRAPH DEPTH HASH-TABLE))))
(PROGN
 (SYSTEM::C-DEFUN 'CREATE-AGGREGRAPH-NODES-AND-LINKS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GRAPH))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-FREE-SPACE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(RECT-CONF-OBJ X1 X2 Y1 Y2 TOP))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-SPACE-BY-VARYING-Y
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(RECT-CONF-OBJ X1 X2 LOWY HIGHY YSIZE TOP))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-GOOD-Y-NEAR-DESIRED-Y
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GRAPH NODE DESIRED-Y))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-NODE-FROM-CONFLICT-OBJECT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(GRAPH NODE))))
(PROGN
 (SYSTEM::C-DEFUN 'MAP-REDUCE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(REDUCE-F MAP-F LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'FUNCTIONP-AND-NOT-NULL
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(F))))