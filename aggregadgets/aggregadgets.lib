#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN (EXPORT '(GVL-SIBLING AGGREGADGET)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'GVL-SIBLING)
 (SYSTEM::%PUTD 'GVL-SIBLING
  (SYSTEM::MAKE-MACRO
   (FUNCTION GVL-SIBLING
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (< (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((NAME (CADR . #1=(SYSTEM::<MACRO-FORM>))) (SLOTS (CDDR . #1#)))
       (BLOCK GVL-SIBLING `(GVL :PARENT ,NAME ,@SLOTS)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'GET-NAME)
 (SYSTEM::%PUTD 'GET-NAME
  (SYSTEM::MAKE-MACRO
   (FUNCTION GET-NAME
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((DEF (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK GET-NAME `(CAR ,DEF)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'GET-CLASS-NAME)
 (SYSTEM::%PUTD 'GET-CLASS-NAME
  (SYSTEM::MAKE-MACRO
   (FUNCTION GET-CLASS-NAME
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((DEF (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK GET-CLASS-NAME `(CADR ,DEF)))))))))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'GET-BODY)
 (SYSTEM::%PUTD 'GET-BODY
  (SYSTEM::MAKE-MACRO
   (FUNCTION GET-BODY
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((DEF (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK GET-BODY `(CDDR ,DEF)))))))))
(PROGN
 (SYSTEM::C-DEFUN 'CALL-CREATE-INSTANCE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(CLASS SLOTS AGGET &KEY NAME ADD-AS))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *INHERIT-FORMULA*)))
(PROGN
 (SYSTEM::C-DEFUN 'GET-INHERITED-VALUE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(QUASI-PROTOTYPE INHERITED-SLOT))))
(PROGN
 (SYSTEM::C-DEFUN 'INHERIT-VALUES
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SLOTS AGG PROTO-COMPONENT-NAME))))
(PROGN
 (SYSTEM::C-DEFUN 'IS-FIRST-COMP-IN-PARTS-LIST
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(COMPONENTS PARTS-LIST))))
(PROGN
 (SYSTEM::C-DEFUN 'CREATE-PART
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(NAME CLASS SLOTS AGGET))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-INSTANCES-FROM
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET PROTOTYPE))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-PART-FROM-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(PART-NAME AGGET PART-FUNCTION))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-PARTS-FROM-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET PART-FUNCTION))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-NAME-AND-PROTOPART-FROM-RANK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(RANK PROTOTYPE AGGET &OPTIONAL NIL-NAME-OK))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-PARTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET PARTS-LIST PROTOTYPE))))
(PROGN
 (SYSTEM::C-DEFUN 'CREATE-INTER
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(NAME CLASS SLOTS AGGET))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-INTERS-FROM
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET PROTOTYPE))))
(PROGN
 (SYSTEM::C-DEFUN 'GET-INTERS-FROM-FUNCTION
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET INTER-FUNCTION))))
(PROGN
 (SYSTEM::C-DEFUN 'MAKE-INTERACTORS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET INTER-LIST PROTOTYPE))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG ELEMENT &REST ARGS))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-LOCAL-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG GOB &OPTIONAL KEY WHERE LOC))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG COMPONENT &OPTIONAL DESTROY?))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-LOCAL-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG GOB))))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG COMP &REST ARGS))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-INTERACTOR-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG INTERACTOR))))
(PROGN
 (SYSTEM::C-DEFUN 'ADD-LOCAL-INTERACTOR-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG INTER))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-INTERACTOR-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG INTERACTOR &OPTIONAL DESTROY?))))
(PROGN
 (SYSTEM::C-DEFUN 'REMOVE-LOCAL-INTERACTOR-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG INTER))))
(PROGN
 (SYSTEM::C-DEFUN 'FIND-LOCATOR-INSTANCE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LOCATOR AGG-INSTANCE))))
(PROGN
 (SYSTEM::C-DEFUN 'TAKE-DEFAULT-COMPONENT-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG NAME &OPTIONAL DESTROY?))))
(PROGN
 (SYSTEM::C-DEFUN 'DESTROY-ME-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGG &OPTIONAL (TOP-LEVEL-P T)))))