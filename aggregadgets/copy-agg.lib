#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN (EXPORT '(COPY-GADGET)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *STANDARD-ELEMENT-SLOTS*)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'INITIALIZE-COPY)
 (SYSTEM::%PUTD 'INITIALIZE-COPY
  (SYSTEM::MAKE-MACRO
   (FUNCTION INITIALIZE-COPY
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 3.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((ORIG (CADR . #1=(SYSTEM::<MACRO-FORM>))) (COPY (CADDR . #1#)))
       (BLOCK INITIALIZE-COPY
        `(LET ((THE-ORIG ,ORIG) (THE-COPY ,COPY))
          (IF (G-VALUE THE-COPY :INITIALIZE-COPY)
           (KR-SEND THE-COPY :INITIALIZE-COPY THE-ORIG THE-COPY)
           (KR-SEND THE-COPY :INITIALIZE THE-COPY)))))))))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-COPY-METHOD-AGGREGADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ORIG COPY))))
(PROGN
 (SYSTEM::C-DEFUN 'INITIALIZE-COPY-METHOD-AGGRELIST
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ORIG COPY))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-GADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET NAME &OPTIONAL NEW-PARENT))))
(PROGN
 (SYSTEM::C-DEFUN 'SET-SLOT-TYPE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(COPY AGGET SLOT))))
(PROGN
 (SYSTEM::C-DEFUN 'COPY-SLOTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(COPY AGGET NORMAL-PROTO COMPONENTS BEHAVIORS NEW-PARENT))))