#0Y UTF-8

(PROGN (SETQ *PACKAGE* (SYSTEM::%FIND-PACKAGE "OPAL")))
(PROGN
 (EXPORT
  '(WRITE-GADGET E-FORMULA *VERBOSE-WRITE-GADGET* *REQUIRED-NAMES*
    *STANDARD-NAMES* *DEFINED-NAMES*)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'WRITE-SLOTS)
 (SYSTEM::%PUTD 'WRITE-SLOTS
  (SYSTEM::MAKE-MACRO
   (FUNCTION WRITE-SLOTS
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 6.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET*
       ((AGGET (CADR . #1=(SYSTEM::<MACRO-FORM>))) (NORMAL-PROTO (CADDR . #1#))
        (COMPONENTS (CADDDR . #1#)) (BEHAVIORS (FIFTH . #1#))
        (SUPPRESS-CHILDREN? (CADR (CDDDDR . #1#))))
       (BLOCK WRITE-SLOTS
        (LET
         ((THE-AGGET (GENSYM)) (THE-NORMAL-PROTO (GENSYM))
          (THE-COMPONENTS (GENSYM)) (THE-BEHAVIORS (GENSYM))
          (THE-SUPPRESS-CHILDREN? (GENSYM)))
         `(LET
           ((,THE-AGGET ,AGGET) (,THE-NORMAL-PROTO ,NORMAL-PROTO)
            (,THE-COMPONENTS ,COMPONENTS) (,THE-BEHAVIORS ,BEHAVIORS)
            (,THE-SUPPRESS-CHILDREN? ,SUPPRESS-CHILDREN?))
           (KR-SEND ,THE-AGGET :WRITE-SLOTS ,THE-AGGET ,THE-NORMAL-PROTO
            ,THE-COMPONENTS ,THE-BEHAVIORS ,THE-SUPPRESS-CHILDREN?)))))))))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *DEFINED-NAMES*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *STANDARD-NAMES*)))
(PROGN (SYSTEM::REMOVE-OLD-DEFINITIONS 'DEFINED-NAME-P)
 (SYSTEM::%PUTD 'DEFINED-NAME-P
  (SYSTEM::MAKE-MACRO
   (FUNCTION DEFINED-NAME-P
    (LAMBDA (SYSTEM::<MACRO-FORM> &OPTIONAL SYSTEM::<ENV-ARG>)
     (DECLARE (CONS SYSTEM::<MACRO-FORM>)) (DECLARE (IGNORE SYSTEM::<ENV-ARG>))
     (IF (/= (LENGTH SYSTEM::<MACRO-FORM>) 2.)
      (SYSTEM::MACRO-CALL-ERROR SYSTEM::<MACRO-FORM>)
      (LET* ((SCHEMA (CADR SYSTEM::<MACRO-FORM>)))
       (BLOCK DEFINED-NAME-P
        `(CAR (MEMBER (KR::SCHEMA-NAME ,SCHEMA) *DEFINED-NAMES*))))))))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *KR-DEBUG-PACKAGE*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *VERBOSE-WRITE-GADGET*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *REQUIRED-NAMES*)))
(PROGN
 (SYSTEM::C-DEFUN 'CONTAINS-REFERENCE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(EXPRESSION))))
(PROGN
 (SYSTEM::C-DEFUN 'WRITE-GADGET
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(GADGET FILE-NAME &OPTIONAL (INITIALIZE? T)))))
(PROGN
 (SYSTEM::C-DEFUN 'E-FORMULA (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(EXPRESSION))))
(PROGN
 (SYSTEM::C-DEFUN 'UNREADABLE-STRUCTURE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(V))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-CACHED-VALUE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(CV))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-META-IF-NEEDED
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(FORMULA))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-FORMULA (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VALUE))))
(PROGN
 (SYSTEM::C-DEFUN 'IS-A-HALFTONE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VAL))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-HALFTONE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VAL))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-GRAPHIC-QUALITY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VAL))))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-VALUE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VAL BACK-QUOTED))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *SAVE-DEBUG*)))
(PROGN
 (SYSTEM::C-DEFUN 'SAVE-DEBUG
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(&REST ARGS))))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *OUTPUT-STACK*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *OUTPUT-STATE*)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *OBJ-STACK*)))
(PROGN (SYSTEM::C-DEFUN 'SHOW-STACKS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'STACK-TOP (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VECTOR))))
(PROGN
 (SYSTEM::C-DEFUN 'CURRENT-STATE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'SET-STATE (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(VAL))))
(PROGN (SYSTEM::C-DEFUN 'RESET-STACKS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'COMPUTE-SHARED-DEPTH
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-PROCLAIM '(SPECIAL *SAVE-INDENT*)))
(PROGN (SYSTEM::C-DEFUN 'RESET-INDENT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'INDENT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'OUTDENT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN (SYSTEM::C-DEFUN 'TAB (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OMIT-FIRST-BEHAVIOR-IF-NECESSARY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OMIT-FIRST-COMPONENT-IF-NECESSARY
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-FINISHED (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-INTERACTORS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-ITEM-PROTOTYPE
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(ITEM-PROTOTYPE))))
(PROGN (SYSTEM::C-DEFUN 'OUTPUT-NAME (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'OUTPUT-NEXT-COMP
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(COMP))))
(PROGN (SYSTEM::C-DEFUN 'OUTPUT-PARTS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'PREPARE-TO-WRITE-PART
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'PREPARE-TO-WRITE-CLASS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'PREPARE-TO-WRITE-SLOT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'INCREASE-DEPTH-TO-OBJ-STACK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'FIRST-INTERACTOR (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'FIRST-COMPONENT (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-DOWN-TOWARD-OBJ-STACK
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-LATERALLY (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-LATERALLY-FROM-COMPONENT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'MOVE-LATERALLY-FROM-INTERACTOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'REDUCE-DEPTH-TO
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(DEPTH))))
(PROGN (SYSTEM::C-DEFUN 'FINISH-PARTS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'FINISH-INTERACTORS (SYSTEM::LAMBDA-LIST-TO-SIGNATURE 'NIL)))
(PROGN
 (SYSTEM::C-DEFUN 'DIFFERENT-ORDER
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(LIST1 LIST2))))
(PROGN
 (SYSTEM::C-DEFUN 'HAS-NORMAL-NAME
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SCHEMA))))
(PROGN
 (SYSTEM::C-DEFUN 'IS-AN-INHERIT-FORMULA
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SLOT VALUE NORMAL-PROTO))))
(PROGN
 (SYSTEM::C-DEFUN 'WRITE-TYPES (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(OBJECT))))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-GADGET (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET))))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-COMPONENT
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(AGGET FIRST-FLAG ITEM-PROTO? SUPPRESS-CHILDREN?))))
(PROGN
 (SYSTEM::C-DEFUN 'PRINT-BEHAVIOR
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(INTER FIRST-FLAG SUPPRESS-CHILDREN?))))
(PROGN
 (SYSTEM::C-DEFUN 'SLOT-HAS-AN-INHERITED-FORMULA
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(SLOT INST-FORMULA PROTO))))
(PROGN
 (SYSTEM::C-DEFUN 'SLOT-HAS-AN-INHERITED-PART
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE '(AGGET SLOT PROTO))))
(PROGN
 (SYSTEM::C-DEFUN 'STANDARD-WRITE-SLOTS
  (SYSTEM::LAMBDA-LIST-TO-SIGNATURE
   '(AGGET NORMAL-PROTO COMPONENTS BEHAVIORS SUPPRESS-CHILDREN?))))